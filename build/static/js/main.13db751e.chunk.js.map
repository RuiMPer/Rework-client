{"version":3,"sources":["components/loading/Loading.js","components/home/Home.js","components/footer/Footer.js","components/services/AddService.js","components/services/ServiceList.js","components/bookings/AddBooking.js","components/bookings/EditBooking.js","components/services/ServiceDetails.js","components/services/EditService.js","components/auth/auth-service.js","components/navbar/Navbar.js","components/company/Company.js","components/images/AddImage.js","components/profile/Profile.js","components/auth/Login.js","components/auth/Signup.js","components/notfound/NotFound.js","components/bookings/BookingListClient.js","App.js","serviceWorker.js","index.js"],"names":["Loading","props","className","Spinner","type","color","Home","state","listOfServices","getUserServices","axios","create","baseURL","process","withCredentials","get","then","responseFromAPI","setState","data","handleNotification","today","moment","format","eachBooking","map","response","bookings","length","console","log","bookingInfo","date","notificationDay","subtract","Page","addNotification","title","subtitle","message","theme","native","this","isLoggedIn","style","marginTop","services","to","_id","Card","key","CardHeader","tag","Button","Jumbotron","inverse","CardImg","width","src","alt","CardImgOverlay","CardTitle","CardText","Component","Footer","padding","textAlign","maxWidth","margin","AddService","category","description","photoPath","author","errorMessage","handleChange","event","target","name","value","handleFileChange","e","files","handleFormSubmit","preventDefault","userId","uploadData","FormData","append","post","refreshServices","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Form","onSubmit","Row","form","Col","md","FormGroup","Label","for","Input","id","onChange","multiple","FormText","ServiceList","showAddService","onClick","loggedInUser","xmlns","viewBox","d","service","CardBody","CardSubtitle","CardLink","href","AddBooking","time","serviceId","getService","EditBooking","booking","put","history","push","deleteBooking","params","match","delete","ServiceDetails","showEditBooking","showAddBooking","location","startTime","endTime","activeTab","getSingleService","deleteService","closeOptions","handleDate","handleCalendarDate","tab","icon","textOnly","marginRight","fontWeight","pathname","Nav","tabs","NavItem","NavLink","classnames","active","toggle","TabContent","TabPane","tabId","photoName","client","buttonTemplate","EditService","AuthService","signup","username","password","firstName","lastName","email","loggedin","logout","login","catch","err","Navbar","dropdownOpen","totalBookings","logoutUser","setCurrentUser","localStorage","clear","countBookings","total","objNumber","pills","exact","outline","Badge","Dropdown","nav","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","React","Company","isBeingEdited","isAdmin","tempLogoPath","logoPath","logoName","locationPin","phone","admins","workers","verified","companyProof","companyId","makeEdit","disabled","placeholder","height","borderRadius","check","AddImage","file","feedbackMessage","handleSubmit","imageUrl","Profile","userInfo","company","birthday","tempPhotoPath","loading","Login","setItem","Signup","error","NotFound","BookingListClient","getUserBookings","utc","confirmationStatus","logStatus","App","hasCompany","userObj","fetchUser","path","render","component","getItem","withRouter","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.13db751e.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  return (\n    <div className=\"loading\">\n      <Spinner type=\"grow\" color=\"success\" /> Loading...\n    </div>\n  );\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport './Home.css';\nimport { CardHeader, Jumbotron, Button, Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\n//import AddNotification from '../notifications/AddNotification';\nimport addNotification from 'react-push-notification';\n\nclass Home extends Component {\n    state = {\n        listOfServices: []\n    }\n\n    componentDidMount() {\n        this.getUserServices();\n    }\n\n    getUserServices = () => {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n        return (service.get(`/services`)\n            .then(responseFromAPI => {\n                // console.log(responseFromAPI)\n                // console.log(\"ISTO\", responseFromAPI.data)\n                // console.log(this.props)\n                this.setState({\n                    listOfServices: responseFromAPI.data\n                })\n            })\n        )\n    }\n\n\n    handleNotification = () => {\n        this.getUserServices();\n        let today = moment().format(\"DD/MM/YYYY\");\n        let eachBooking = [];\n\n        this.state.listOfServices.map((response) => {\n            if (response.bookings.length >= 1) {\n                response.bookings.map(response => {\n                    console.log(\"ESTE\", response)\n                    let eachBook = axios.create({\n                        baseURL: `${process.env.REACT_APP_SERVER}`,\n                        withCredentials: true\n                    });\n                    return (\n                        eachBook.get(`/bookings/${response}`)\n                            .then(response => {\n                                console.log(\"IDSDAA\", response)\n                                let bookingInfo = response.data\n                                console.log(bookingInfo)\n                                console.log(bookingInfo.date)\n                                // eachBooking.push(bookingInfo)\n                                let notificationDay = moment(response.date).subtract(1, \"days\").format(\"DD/MM/YYYY\")\n                                //let dateNot = moment(response.date).format(\"DD/MM/YYYY\")\n                                console.log(response.date)\n                                console.log(\"hoje\", today)\n                                console.log(\"dia notificação\", notificationDay)\n                                // if (today === notificationDay) {\n                                //     console.log(\"finally\")\n                                // } else {\n                                //     console.log(\"no notification\")\n                                // }\n\n                            })\n                    )\n                });\n            }\n        });\n\n        if (eachBooking.length >= 1) {\n            console.log(\"OUTRO\", eachBooking)\n\n            //eachBooking.map(response => {\n            //console.log(\"DATAS\", response.date)\n            //let notificationDay = moment(response.date).subtract(1, \"days\").format(\"DD/MM/YYYY\")\n            //});\n        }\n    }\n\n    Page = () => {\n        const buttonClick = (date, time) => {\n            addNotification({\n                title: 'New Booking',\n                subtitle: \"Sadas\",\n                message: \"asdasd\",\n                theme: 'darkblue',\n                native: true // when using native, your OS will handle theming.\n            });\n            console.log(\"olhaeste \", this.props)\n        }\n\n        return (\n            <div className=\"page\">\n                {buttonClick()}\n            </div>)\n    }\n\n    render() {\n        // console.log(\"final\", this.state.bookingRetrieve)\n        // // console.log(newList)\n        // console.log(this.state.listOfServices)\n        return (\n            <section className=\"home\">\n                {/* <h1>Welcome to Re-work!</h1> */}\n                {/* <button onClick={() => { this.handleNotification() }}>TESTE:</button>\n                <button onClick={this.getUserServices}>Services</button> */}\n                {this.props.isLoggedIn &&\n                    <>\n                        <h3>My Services</h3>\n                        <section className=\"servicesnahome\">\n                            {this.state.listOfServices.length === 0 && <> <p style={{ marginTop: \"10px\" }}>There is still no services to show.</p></>}\n                            {this.state.listOfServices.length > 0 && <>\n                                {this.state.listOfServices.map(services => {\n                                    return (\n                                        <>\n                                            <Link to={`/services/${services._id}`}>\n                                                <Card key={services._id}>\n                                                    <CardHeader tag=\"h3\">{services.title}</CardHeader>\n                                                    <Button>+</Button>\n                                                </Card>\n                                            </Link>\n                                        </>\n                                    )\n                                })}\n                            </>}\n\n                        </section>\n                        {/* <h3>Calendário da Empresa X</h3> */}\n                        {/* {this.state.newBookings.map(booking => {\n                            return (\n                                <div key={booking._id}>\n                                    <p>{booking.title}</p>\n                                </div>\n                            )\n                        })} */}\n                        {/* <h3>Clientes da Empresa X</h3> */}\n                        <hr />\n                    </>\n                }\n\n                <div className=\"clearfix\"></div>\n                <h3>How things work at Rework:</h3>\n                <Jumbotron>\n                    <span className=\"lead\">1 - </span><span>Advertise your services and manage booking.</span>\n                    <hr className=\"my-2\" />\n                    <span className=\"lead\">2 - </span><span>Look for what you need.</span>\n                    <hr className=\"my-2\" />\n                    <span className=\"lead\">3 - </span><span>Get notified about upcoming appointments.</span>\n                    <hr className=\"my-2\" />\n\n                    <p className=\"lead\">\n                        <Button color=\"primary\">Start Now!</Button>\n                    </p>\n                </Jumbotron>\n\n                <h3>All our categories</h3>\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?health,human\" alt=\"Card cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>HEALTH</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?technology\" alt=\"Card cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>TECHNOLOGY</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?beauty,aesthetics\" alt=\"Card cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>BEAUTY & PERSONAL CARE</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?dyi,repairs,handy\" alt=\"Card cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>HOME REPAIRS</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?cooking\" alt=\"Card cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>COOKING</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n                <Card inverse className=\"category-card\">\n                    <CardImg width=\"100%\" src=\"https://source.unsplash.com/1600x900/?education\" alt=\"Card image cap\" />\n                    <CardImgOverlay>\n                        <CardTitle>EDUCATION</CardTitle>\n                        <CardText>\n                            <small>Coming Soon...</small>\n                        </CardText>\n                    </CardImgOverlay>\n                </Card>\n            </section>\n        )\n    }\n\n}\nexport default Home;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer className=\"footer bg-info\" style={{ padding: '.5rem', textAlign: 'center' }}>\n            <div className=\"clearfix\" style={{ maxWidth: '980px', margin:'auto' }}>\n                <p className=\"float-right\">2020 | Re-WORK   /   Credits: R, M.</p>\n            </div>\n        </footer>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass AddService extends Component {\r\n    state = {\r\n        category: [],\r\n        title: '',\r\n        description: '',\r\n        photoPath: null,\r\n        author: \"\",\r\n        errorMessage: '',\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({ photoPath: e.target.files[0] });\r\n        // let files = e.target.files;\r\n        // this.setState({ 'photoPath': files })\r\n        //this.setState({ photoPath: event.target.files[0] });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { category, title, description, photoPath } = this.state\r\n        const userId = this.props.userId\r\n        const uploadData = new FormData()\r\n        uploadData.append(\"photoPath\", photoPath)\r\n        // const { category, title, description, photoPath } = this.state;\r\n        // const userId = this.props.userId;\r\n        // const uploadData = new FormData();\r\n\r\n        // let files = this.state.photoPath;\r\n        // console.log(files)\r\n        // for (let i = 0; i < files.length; i++) {\r\n        //     uploadData.append(\"photoPath\", files[i], files[i].name);\r\n        // }\r\n\r\n        \r\n        //uploadData.append(\"photoPath\", photoPath);\r\n\r\n        if (!category || !title || !description || !photoPath) {\r\n            this.setState({ errorMessage: \"All fields are compulsory! Complete your form, please.\" });\r\n        }\r\n        else{\r\n            this.setState({ errorMessage:''});\r\n        }\r\n\r\n        // axios.post(`${process.env.REACT_APP_SERVER}/uploadMultiple`, uploadData)\r\n        axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\r\n            .then((response) => {\r\n                console.log(\"USer\", userId)\r\n                console.log('image uploaded', response);\r\n                axios.post(`${process.env.REACT_APP_SERVER}/services`, { category, title, description, photoPath: response.data.photoPath, author: userId })\r\n                    .then((response) => {\r\n                        console.log('service created', response);\r\n                        this.props.refreshServices();\r\n                        this.setState({ category: [], title: '', description: \"\", photoPath: [], author: \"\" });\r\n                        toast('Service created with super success!');\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ToastContainer position=\"bottom-right\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover/>\r\n                {/* <form onSubmit={this.handleFormSubmit}>\r\n                    <label>Title</label>\r\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                    <label>Category</label>\r\n                    <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\r\n                    <label>Description</label>\r\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    <input type=\"file\" name=\"file\" onChange={this.handleFileChange} />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form> */}\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"category\">Category</Label>\r\n                                <Input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"file\">File</Label>\r\n                        <Input type=\"file\" name=\"file\" onChange={this.handleFileChange} multiple/>\r\n                        <FormText color=\"muted\">\r\n                            Add relevant photos to illustrate the services you provide.\r\n                        </FormText>\r\n                    </FormGroup>\r\n                    <Button>Submit</Button>\r\n                    {this.state.errorMessage &&\r\n                        <p className=\"error\" style={{marginTop:\"10px\"}}> {this.state.errorMessage} </p>}\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddService;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\n//import moment from 'moment';\n//import { Link } from 'react-router-dom';\nimport AddService from './AddService';\n//import AddNotification from '../notifications/AddNotification';\nimport './css/ServiceList.css';\nimport {\n    Card, CardBody, CardLink,\n    CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nclass ServiceList extends Component {\n\n    state = {\n        listOfServices: [],\n        showAddService: false\n    }\n\n    componentDidMount() {\n        this.getUserServices();\n    }\n    getUserServices = () => {\n        this.setState({ showAddService: false });\n        // Get list of service from the API we just built\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n        return (service.get(`/services`)\n            .then(responseFromAPI => {\n                // console.log(responseFromAPI)\n                // console.log(\"ISTO\", responseFromAPI.data)\n                // console.log(this.props)\n                this.setState({\n                    listOfServices: responseFromAPI.data\n                })\n            })\n        )\n\n    }\n\n    // getAllServices = () => {\n    //     // Get list of service from the API we just built\n    //     axios.get(`${process.env.REACT_APP_SERVER}/services`)\n    //         .then(responseFromAPI => {\n\n    //             this.setState({\n    //                 listOfServices: responseFromAPI.data\n    //             })\n    //         });\n    // }\n\n    showAddService = () => {\n        const { showAddService } = this.state;\n        showAddService ? this.setState({ showAddService: false }) : this.setState({ showAddService: true })\n    }\n\n    render() {\n        const { showAddService } = this.state\n        return (\n            <>\n\n                <header className=\"header\">\n                    <h1>My Services</h1>\n                    <Button onClick={() => this.showAddService()} className={showAddService ? 'openAdd' : null} >\n                        {showAddService ? \"Cancelar\" : \"Add Service\"}\n                    </Button>\n                </header>\n\n                {showAddService && <>\n                    <AddService userId={this.props.loggedInUser._id} refreshServices={this.getUserServices} />\n                </>}\n\n                <section className=\"maincontent servicelist\">\n                    {!this.state.showAddService && this.state.listOfServices.length === 0 && <> \n                    <div className=\"noresultswrap\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><path d=\"M15,109.8l48,17c0,0,0,0,0,0c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.1,0,0.2,0c0.1,0,0.2,0,0.4,0c0,0,0.1,0,0.1,0c0.2,0,0.3,0,0.5,0 c0,0,0.1,0,0.1,0c0.1,0,0.2-0.1,0.3-0.1c0,0,0,0,0,0l48-17c1.2-0.4,2-1.6,2-2.8V73.4l10-3.5c0.8-0.3,1.5-1,1.8-1.8s0.2-1.8-0.3-2.6 l-12-20c0,0,0,0,0-0.1c0-0.1-0.1-0.1-0.1-0.2c0,0,0,0,0-0.1c0,0,0,0,0,0c0-0.1-0.1-0.1-0.1-0.2c0,0-0.1-0.1-0.1-0.1c0,0,0,0-0.1-0.1 c0,0,0,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.1c0,0-0.1-0.1-0.1-0.1c0,0,0,0-0.1,0c0,0-0.1,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.1 c-0.1,0-0.1,0-0.2-0.1c0,0,0,0-0.1,0c0,0,0,0,0,0l-48-17c-0.2-0.1-0.4-0.1-0.6-0.1c0,0-0.1,0-0.1,0c-0.2,0-0.3,0-0.5,0 c-0.1,0-0.1,0-0.2,0c-0.2,0-0.4,0.1-0.6,0.1l-48,17c0,0,0,0,0,0c0,0-0.1,0-0.1,0.1c0,0,0,0,0,0c-0.1,0.1-0.3,0.1-0.4,0.2 c0,0,0,0,0,0c0,0,0,0,0,0c-0.2,0.1-0.4,0.3-0.6,0.5l0,0c0,0-0.1,0.1-0.1,0.1c0,0,0,0,0,0c-0.1,0.1-0.1,0.2-0.2,0.2c0,0,0,0,0,0 c0,0,0,0-0.1,0.1l-12,20C1,66.2,0.9,67.2,1.2,68s1,1.5,1.8,1.8l10,3.5V107C13,108.3,13.8,109.4,15,109.8z M109,104.9l-42,14.9V95.7 c0-1.7-1.3-3-3-3s-3,1.3-3,3v24.1l-42-14.9V75.5l32,11.3c0.3,0.1,0.7,0.2,1,0.2c1,0,2-0.5,2.6-1.5L64,69.8l9.4,15.7 C74,86.5,75,87,76,87c0.3,0,0.7-0.1,1-0.2l32-11.3V104.9z M67,34.2L103,47L67,59.8V34.2z M77.3,80.4l-8.9-14.8l42.2-15l8.9,14.8 L77.3,80.4z M17.3,50.6l42.2,15l-8.9,14.8l-42.2-15L17.3,50.6z\"></path></svg>\n                            <p className=\"noresults\">There is still no services to show.</p>\n                    </div>\n                    </>}\n\n                        {this.state.listOfServices.map(service => {\n                        return (\n                            <div key={service._id}>\n                                <Card to={`/services/${service._id}`}>\n                                    <CardBody>\n                                        <CardTitle>{service.title}</CardTitle>\n                                        <CardSubtitle>CATEGORY: {service.category}</CardSubtitle>\n                                    </CardBody>\n                                    <img width=\"100%\" src={(service.photoPath !== 'unknown' || service.photoPath !== '') ? (service.photoPath) : ('https://picsum.photos/200')} alt=\"Card cap\" />\n                                    <CardBody>\n                                        <CardLink href=\"#\">Book now</CardLink>\n                                        <CardLink href={`/services/${service._id}`}>Know more</CardLink>\n                                    </CardBody>\n                                </Card>\n                            </div>\n                        );\n                    })}\n                    {/* <AddNotification /> */}\n                </section>\n            </>\n        )\n    }\n}\n\nexport default ServiceList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"./css/AddBooking.css\"\n\n\nclass AddBooking extends Component {\n    state = {\n        title: '',\n        description: '',\n        date: \"\",\n        time: \"\"\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { title, description, date, time } = this.state;\n        const service = this.props.serviceId;\n        axios.post(`${process.env.REACT_APP_SERVER}/bookings`, { title, description, service, date, time })\n            .then(() => {\n                this.props.getService();\n                this.setState({ title: '', description: '', date: \"\", time: \"\" });\n                toast('Booking created!');\n            })\n    }\n\n\n    render() {\n        return (\n            <div className=\"addbooking\">\n            <div className=\"overlay\"></div>\n            <div className=\"realdeal\">\n                <h3>Add Booking</h3>\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"date\">Date</Label>\n                                <Input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"time\">Time</Label>\n                        <Input type=\"time\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </Form>\n                <ToastContainer position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddBooking;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass EditBooking extends Component {\r\n\tstate = {\r\n\t\ttitle: this.props.booking.title,\r\n\t\tdescription: this.props.booking.description,\r\n\t\tdate: this.props.booking.date,\r\n\t\ttime: this.props.booking.time\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\thandleFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { title, description, date, time } = this.state;\r\n\r\n\t\taxios.put(`${process.env.REACT_APP_SERVER}/bookings/${this.props.booking._id}`, { title, description, date, time })\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.props.history.push('/services');\r\n\t\t\t});\r\n\t}\r\n\r\n\tdeleteBooking = () => {\r\n\t\tconst { params } = this.props.match;\r\n\t\taxios.delete(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\r\n\t\t\t.then(() => {\r\n\t\t\t\t//return <Redirect to='/services' />\r\n\t\t\t\tthis.props.history.push('/services');\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Edit Form</h3>\r\n\t\t\t\t<Form onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<Row form>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"title\">Title</Label>\r\n\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"date\">Date</Label>\r\n\t\t\t\t\t\t\t\t<Input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"time\">Time</Label>\r\n\t\t\t\t\t\t<Input type=\"time\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"description\">Description</Label>\r\n\t\t\t\t\t\t<Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<Button>Submit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default EditBooking;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"./css/ServiceDetails.css\";\nimport { Link } from 'react-router-dom';\nimport AddBooking from '../bookings/AddBooking';\nimport EditBooking from '../bookings/EditBooking';\nimport AddToCalendar from 'react-add-to-calendar';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\n//import Example from './Caroussel';\nimport moment from 'moment';\n\nclass ServiceDetails extends Component {\n    state = {\n        showEditBooking: false,\n        showAddBooking: false,\n        event: {\n            title: \"\",\n            description: \"\",\n            location: \"\",\n            startTime: \"\",\n            endTime: \"\"\n        },\n        activeTab:'1'\n    }\n\n    // constructor(props) {\n    //     super(props);\n    //     this.toggle = this.toggle.bind(this);\n    //     this.state = {\n    //         activeTab: '1'\n    //     };\n    // }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n    getSingleService = () => {\n        //id of the service is on the url /services/1234567\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\n            .then(responseFromAPI => {\n                const service = responseFromAPI.data;\n                console.log('service found', service);\n                this.setState(service);\n            })\n    }\n\n    // 2. Happens second\n    componentDidMount() {\n        this.getSingleService();\n    }\n\n    deleteService = () => {\n        const { params } = this.props.match;\n        axios.delete(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\n            .then(() => {\n                this.props.history.push('/services');\n            })\n    }\n\n    showAddBooking = () => {\n            this.state.showAddBooking ? this.setState({ showAddBooking: false }) : this.setState({ showAddBooking: true, showEditBooking: false });\n        \n    }\n\n    showEditBooking = () => {\n        this.state.showEditBooking ? this.setState({ showEditBooking: false }) : this.setState({ showEditBooking: true, showAddBooking: false });\n    }\n\n    closeOptions = () => {\n        this.setState({ showEditBooking: false, showAddBooking: false });\n    }\n\n    deleteBooking = (booking) => {\n        //const { params } = this.props.match;\n        console.log(booking);\n        axios.delete(`${process.env.REACT_APP_SERVER}/bookings/${booking._id}`)\n            .then(() => {\n                //return <Redirect to='/services' />\n                this.props.history.push(`/services`);\n            })\n    }\n\n    handleDate = (date) => {\n        const newDate = moment(date).format(\"DD/MM/YYYY\")\n        return newDate;\n    }\n\n    handleCalendarDate = (date, time) => {\n        let dateTime = moment(date + ' ' + time, 'DD/MM/YYYY HH:mm');\n        return dateTime;\n    }\n\n\n    // 1. Happens first\n    render() {\n        let icon = { textOnly: 'none' }\n        const { params } = this.props.match;\n\n        return (\n            <div className=\"servicedetails\">\n                <header className=\"header\">\n                        <div className=\"toTheLeft\">\n                            <Link to={\"/services\"}><Button color=\"link\" style={{marginRight:\"10px\"}}>Back</Button></Link>\n                            <h1>Details about <span style={{fontWeight:\"100\"}}>{this.state.title}</span></h1>\n                        </div>\n                        \n                        <div className=\"toTheRight\">\n                            {this.props.loggedInUser && <>\n                                <Button color=\"danger\" onClick={() => this.deleteService()}>Delete Service</Button>\n                            </>}\n                            \n                            <Link to={{\n                                pathname: `/services/${params.id}/edit`,\n                                state: {\n                                    title: this.state.title,\n                                    description: this.state.description,\n                                    category: this.state.category,\n                                    photoPath: this.state.photoPath\n                                }\n                            }}><Button color=\"info\" >Edit Service</Button></Link>\n\n                            <Button color=\"primary\" onClick={this.showAddBooking} >Add Booking</Button>\n\n                            \n\n                        </div>\n                </header>\n\n                    <Nav tabs >\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '1' })}\n                                onClick={() => { this.toggle('1'); this.closeOptions() }} >Information </NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '2' })}\n                                onClick={() => { this.toggle('2'); this.closeOptions() }}> Bookings</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink\n                                className={classnames({ active: this.state.activeTab === '3' })}\n                                onClick={() => { this.toggle('3'); this.closeOptions() }} >Clients </NavLink>\n                        </NavItem>\n                    </Nav>\n\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            {this.state.activeTab === '1' &&\n                                <div className=\"serviceinfodetails\">\n                                    <img src={this.state.photoPath} alt={this.state.photoName} />\n                                    <span>\n                                        <label>Title:</label>\n                                        <h3>{this.state.category}</h3><hr/>\n                                        <label>Description:</label>\n                                        <p>{this.state.description}</p>\n                                    </span>\n                                </div>\n                                }\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            {this.state.activeTab === '2' && <>\n\n                            {this.state.bookings.length === 0 && <> \n                                <div className=\"noresultswrap serviceinfodetails\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><path d=\"M15,109.8l48,17c0,0,0,0,0,0c0.1,0,0.2,0.1,0.3,0.1c0.1,0,0.1,0,0.2,0c0.1,0,0.2,0,0.4,0c0,0,0.1,0,0.1,0c0.2,0,0.3,0,0.5,0 c0,0,0.1,0,0.1,0c0.1,0,0.2-0.1,0.3-0.1c0,0,0,0,0,0l48-17c1.2-0.4,2-1.6,2-2.8V73.4l10-3.5c0.8-0.3,1.5-1,1.8-1.8s0.2-1.8-0.3-2.6 l-12-20c0,0,0,0,0-0.1c0-0.1-0.1-0.1-0.1-0.2c0,0,0,0,0-0.1c0,0,0,0,0,0c0-0.1-0.1-0.1-0.1-0.2c0,0-0.1-0.1-0.1-0.1c0,0,0,0-0.1-0.1 c0,0,0,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.1c0,0-0.1-0.1-0.1-0.1c0,0,0,0-0.1,0c0,0-0.1,0-0.1,0c-0.1,0-0.1-0.1-0.2-0.1 c-0.1,0-0.1,0-0.2-0.1c0,0,0,0-0.1,0c0,0,0,0,0,0l-48-17c-0.2-0.1-0.4-0.1-0.6-0.1c0,0-0.1,0-0.1,0c-0.2,0-0.3,0-0.5,0 c-0.1,0-0.1,0-0.2,0c-0.2,0-0.4,0.1-0.6,0.1l-48,17c0,0,0,0,0,0c0,0-0.1,0-0.1,0.1c0,0,0,0,0,0c-0.1,0.1-0.3,0.1-0.4,0.2 c0,0,0,0,0,0c0,0,0,0,0,0c-0.2,0.1-0.4,0.3-0.6,0.5l0,0c0,0-0.1,0.1-0.1,0.1c0,0,0,0,0,0c-0.1,0.1-0.1,0.2-0.2,0.2c0,0,0,0,0,0 c0,0,0,0-0.1,0.1l-12,20C1,66.2,0.9,67.2,1.2,68s1,1.5,1.8,1.8l10,3.5V107C13,108.3,13.8,109.4,15,109.8z M109,104.9l-42,14.9V95.7 c0-1.7-1.3-3-3-3s-3,1.3-3,3v24.1l-42-14.9V75.5l32,11.3c0.3,0.1,0.7,0.2,1,0.2c1,0,2-0.5,2.6-1.5L64,69.8l9.4,15.7 C74,86.5,75,87,76,87c0.3,0,0.7-0.1,1-0.2l32-11.3V104.9z M67,34.2L103,47L67,59.8V34.2z M77.3,80.4l-8.9-14.8l42.2-15l8.9,14.8 L77.3,80.4z M17.3,50.6l42.2,15l-8.9,14.8l-42.2-15L17.3,50.6z\"></path></svg>\n                                        <p className=\"noresults\">There is still no bookings to show.</p>\n                                </div>\n                            </>}\n\n                                {this.state.bookings.map(booking => {\n                                    return (\n                                        <div key={booking._id} className=\"serviceinfodetails\">\n                                            <ul>\n                                                <li>Title: {booking.title}</li>\n                                                <li>Description: {booking.description}</li>\n                                                <li>Date: {this.handleDate(booking.date)}</li>\n                                                <li>Time: {booking.time}</li>\n                                                <li>Client: {booking.client}</li>\n                                                {/* <li><button onClick={() => { this.handleNotification(booking) }}>TESTE:</button></li> */}\n                                                <li><button onClick={this.showEditBooking}>Edit</button></li>\n                                                <li><button onClick={() => { this.deleteBooking(booking) }}>Delete</button></li>\n                                                {this.state.showEditBooking && <EditBooking booking={booking} {...this.props} />}\n                                                <AddToCalendar event={{ title: booking.title, description: booking.description, startTime: this.handleCalendarDate(this.handleDate(booking.date), booking.time), endTime: this.handleCalendarDate(this.handleDate(booking.date), booking.time) }} buttonTemplate={icon} />\n                                            </ul>\n                                        </div>\n                                    );\n                                })}\n                            </>}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            {this.state.activeTab === '3' && <div className=\"noresultswrap serviceinfodetails\">\n                            <p className=\"noresults\">Coming soon.</p>\n                            </div>}\n                        </TabPane>\n                    </TabContent>\n                {this.state.showAddBooking && <>\n                    <span className=\"closepopup\" onClick={this.showAddBooking}></span>\n                    <AddBooking getService={this.getSingleService} serviceId={this.props.match.params.id} />\n                </>}\n            </div>\n        )\n    }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass EditService extends Component {\n    state = {\n        title: this.props.location.state.title,\n        category: this.props.location.state.category,\n        description: this.props.location.state.description,\n        photoPath: this.props.location.state.photoPath\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { title, category, description } = this.state;\n        const { params } = this.props.match;\n        const uploadData = new FormData()\n        uploadData.append(\"photoPath\", this.state.photoPath)\n\n        axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                axios.put(`${process.env.REACT_APP_SERVER}/services/${params.id}`, { title, category, description, photoPath: response.data.photoPath })\n                    .then((response) => {\n                        toast('Service Updated!')\n                        this.props.history.push('/services')\n                    })\n            })\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ photoPath: event.target.files[0] });\n    }\n    render() {\n        const { params } = this.props.match;\n        return (\n            <div>\n                <Link to={{ pathname: `/services/${params.id}` }}>Back</Link>\n                <h3>Edit Service</h3>\n                {/* <form onSubmit={this.handleFormSubmit}>\n                    <label>Title</label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\n                    <label>Category</label>\n                    <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\n                    <label>Description</label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"submit\" />\n                </form> */}\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"category\">Category</Label>\n                                <Input type=\"category\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"file\">File</Label>\n                        <Input type=\"file\" name=\"file\" onChange={this.handleFileChange} />\n                        <FormText color=\"muted\">\n                            This is some placeholder block-level help text for the above input.\n                            It's a bit lighter and easily wraps to a new line.\n                        </FormText>\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </Form>\n                <ToastContainer position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n            </div>\n        )\n    }\n\n}\n\nexport default EditService;","import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n\nclass AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signup = (username, password, firstName, lastName, email, type) => {\n        return this.service.post('/signup', { username, password, firstName, lastName, email, type })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    logout = () => {\n        return this.service.post('/logout')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    login = (username, password) => {\n        return this.service.post('/login', { username, password })\n            .then((response) => {\n                return response.data\n            })\n            .catch((err) => {\n                return err;\n            })\n    }\n}\n\nexport default AuthService;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.css';\nimport AuthService from '../auth/auth-service';\nimport { Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport { Badge, Button } from 'reactstrap';\nimport axios from 'axios';\n\nclass Navbar extends React.Component {\n    service = new AuthService();\n\n    state = {\n        dropdownOpen: false,\n        totalBookings: 0\n    };\n\n    componentDidMount() {\n        this.getUserServices()\n            .then(() => {\n                this.countBookings()\n            })\n\n    }\n    // componentWillUpdate() {\n\n    // }\n    // componentDidUpdate() {\n    //     this.countBookings()\n    // }\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    logoutUser = () => {\n        this.service.logout()\n            .then(() => {\n                this.props.setCurrentUser(null);\n                localStorage.clear();\n            })\n    }\n\n    getUserServices = () => {\n        // Get list of service from the API we just built\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n        return (service.get(`/services`)\n            .then(responseFromAPI => {\n                // console.log(responseFromAPI)\n                // console.log(\"ISTO\", responseFromAPI.data)\n                // console.log(this.props)\n                this.setState({\n                    listOfServices: responseFromAPI.data\n                })\n            })\n        )\n    }\n\n    countBookings = () => {\n        // this.getUserServices()\n        let total = 0\n        this.state.listOfServices.map(response => {\n            let objNumber = response.bookings.length\n            // console.log(\"count\", objNumber)\n            return total += objNumber\n        })\n        this.setState({\n            totalBookings: total\n        })\n        // console.log(\"total\", total)\n    }\n\n    render() {\n        //console.log(this.props.loggedInUser)\n        // console.log(\"navbar\", this.state.listOfServices)\n        return (\n            < nav className=\"navbar\" >\n                <Nav pills>\n\n                    <NavItem>\n                        <NavLink exact to=\"/\">Home</NavLink>\n                    </NavItem>\n                    {this.state.countBookings}\n                    {!this.props.loggedInUser ? (\n                        <>\n                            <NavItem className=\"search\">\n                                <NavLink to=\"/search\" >Search</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to='/login'>Login</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink to='/signup'>Signup</NavLink>\n                            </NavItem>\n                        </>\n                    ) : (\n                            <>\n                                <div className=\"alignright\">\n\n                                    <span className=\"nav-item\">\n                                        Welcome, {this.props.loggedInUser.firstName}!\n                            </span>\n                                    <div className=\"nav-item\">\n                                        <Button color=\"primary\" outline>\n                                            Bookings <Badge color=\"secondary\">{this.state.totalBookings}</Badge>\n                                        </Button>\n                                    </div>\n                                    <Dropdown nav isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n                                        <DropdownToggle nav caret>\n                                            My Area\n                                </DropdownToggle>\n                                        <DropdownMenu>\n\n                                            {this.props.loggedInUser.type === \"worker\" ? (\n                                                <>\n                                                    <DropdownItem header>Worker</DropdownItem>\n                                                    <DropdownItem>\n                                                        <NavItem>\n                                                            <NavLink to=\"/services\">My Services</NavLink>\n                                                        </NavItem>\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        <NavItem className=\"clients\">\n                                                            <NavLink to=\"#\">My Clients</NavLink>\n                                                        </NavItem>\n                                                    </DropdownItem>\n                                                    <DropdownItem>\n                                                        <NavItem>\n                                                            <NavLink to=\"/company\">My Company</NavLink>\n                                                        </NavItem>\n                                                    </DropdownItem>\n                                                </>\n                                            ) : (\n                                                    <DropdownItem header>Client</DropdownItem>\n                                                )}\n\n                                            <DropdownItem>\n                                                <NavItem>\n                                                    <NavLink to=\"/bookings\">My Bookings</NavLink>\n                                                </NavItem>\n                                            </DropdownItem>\n\n                                            <DropdownItem divider />\n\n                                            <DropdownItem>\n                                                <NavItem className=\"settings\">\n                                                    <NavLink to=\"#\">Settings</NavLink>\n                                                </NavItem>\n                                            </DropdownItem>\n                                            <DropdownItem>\n                                                <NavItem>\n                                                    <NavLink to={`/profile/${this.props.loggedInUser._id}`}>Profile</NavLink>\n                                                </NavItem>\n                                            </DropdownItem>\n                                            <DropdownItem>\n                                                <NavItem>\n                                                    <NavLink to=\"/\" onClick={() => this.logoutUser()}>Logout</NavLink>\n                                                </NavItem>\n                                            </DropdownItem>\n                                        </DropdownMenu>\n                                    </Dropdown>\n\n                                </div>\n\n                            </>)}\n                </Nav>\n            </nav >\n        )\n    }\n}\n\nexport default Navbar;","\n// title: String,\n// workers: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n// logoPath: String, //cloudinary\n// logoName: String, // cloudinary\n// locationPin: String, //google maps\n// phone: String, \n// service: [{ type: Schema.Types.ObjectId, ref: 'Service' }], \n// admins: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n// verified: Boolean\n\nimport React from 'react';\nimport './Company.css';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nclass Company extends React.Component {\n\n    state = {\n        isBeingEdited:false,\n\n        isAdmin:'',\n        title: '',\n        tempLogoPath: '',\n        logoPath:'',\n        logoName: `${this.title}'s logo`,\n        locationPin: '',\n        phone: '',\n        admins:[],\n        workers:[],\n        verified:false,\n        companyProof:''\n    }\n\n    componentDidMount(){\n        console.log(\"component did mount\");\n        console.log('PROPSSSSS',this.props.loggedInUser)\n\n        let companyId = this.props.match.params.id;\n        console.log(\"pre\", this.props.match.params.id)\n\n        if(this.props.match.params.id){\n            console.log(\"ENTROUUUUU\", this.props.match.params.id)\n            let service = axios.create({\n                baseURL: `${process.env.REACT_APP_SERVER}`,\n                withCredentials: true\n            });\n\n            return (\n                service.get(`/company/${companyId}`)\n                    .then((response) => {\n                        console.log(\"RESPONSEEE\", response)\n                        let { title, logoPath, logoName, locationPin, phone, admins, workers, isAdmin, verified, companyProof } = response.data;\n                        this.setState({\n                            title,\n                            logoPath,\n                            logoName,\n                            locationPin,\n                            phone,\n                            admins,\n                            workers,\n                            verified, \n                            companyProof,\n                            isAdmin\n                        });\n                    })\n                .catch((err) => {\n                    return err;\n                })\n            );\n        }\n\n    }\n\n    handleChange = (event) => {\n        console.log(\"change handle\");\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ tempLogoPath: event.target.files[0] });\n        console.log(this.state.tempLogoPath);\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        \n        //save edit to bd\n        // let service = axios.create({\n        //     baseURL: `${process.env.REACT_APP_SERVER}`,\n        //     withCredentials: true\n        // });\n\n        let { title, logoName, locationPin, phone, verified, companyProof, isAdmin } = this.state;\n\n        if(this.state.tempLogoPath===\"\"){\n            let service = axios.create({\n                baseURL: `${process.env.REACT_APP_SERVER}`,\n                withCredentials: true\n            });\n\n            return service.post(`${process.env.REACT_APP_SERVER}/company`, { title, logoName, locationPin, phone, verified, companyProof, isAdmin, logoPath:this.state.tempLogoPath })\n            .then(response => {\n                console.log(\"success without photo\", response);\n\n                //notification success\n                toast('Company was updated!');\n                //return no view mode\n                this.setState({\n                    isBeingEdited:false\n                });\n\n                let id=response.data.response._id;\n                this.props.history.push(`/company/${id}`);\n            });\n        }\n        else{\n            const uploadData = new FormData();\n            uploadData.append(\"photoPath\", this.state.tempLogoPath);\n    \n            // save in cloudinary\n            axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log(\"goes to cloudinary\", response)\n                this.setState({logoPath: response.data.photoPath });\n                \n                let service = axios.create({\n                    baseURL: `${process.env.REACT_APP_SERVER}`,\n                    withCredentials: true\n                });\n\n                return service.post(`${process.env.REACT_APP_SERVER}/company`, { title, logoName, locationPin, phone, verified, companyProof, isAdmin, logoPath:this.state.logoPath })\n                .then(response => {\n                            console.log(\"success with photo\", response);\n\n                            //notification success\n                            toast('Profile was updated!');\n                            //return no view mode\n                            this.setState({\n                                isBeingEdited:false\n                            });\n\n                            let id=response.data.response._id;\n\n                            this.props.history.push(`/company/${id}`);\n                    });\n            });\n        }\n\n    }\n\n    // Button to toggle edit mode\n    makeEdit(){\n        this.setState({\n            isBeingEdited: !this.state.isBeingEdited\n        });\n    }\n\n\n    render() {\n        console.log(\"render\")\n        /* getting props/state with all info from user destructured */\n        //const {userInfo} = this.state;\n        let { title, locationPin, phone, verified, companyProof } = this.state;\n\n        return (\n            <>\n                <header className=\"header\">\n                    <h1>My Company</h1> \n                    <div className=\"toTheRight\">\n                        <Button color=\"primary\" onClick={this.handleFormSubmit} >Save</Button>\n                        <Button\n                            onClick={() => this.makeEdit()}>\n                            {this.state.isBeingEdited ? \"View Mode\" : \"Edit\"}\n                        </Button>\n                    </div>\n                </header>\n                \n                <ToastContainer\n                    position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n                <Form onSubmit={this.handleFormSubmit} className=\"mycompany\">\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"companyName\">Name</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"title\" id=\"title\" placeholder=\"Escreve o nome da tua empresa aqui...\" value={title} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"username\">Phone</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Escreve o telefone aqui...\" value={phone} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Admin of this Company</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"select\" name=\"isAdmin\" id=\"isAdmin\" value={this.state.isAdmin} onChange={this.handleChange}>\n                                    <option value=\"\" disabled >Responsável pela tua empresa</option>\n                                    <option>Eu próprio</option>\n                                    <option>Outro</option>\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Location Pin</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"locationPin\" id=\"locationPin\" placeholder=\"Localiza a tua empresa no mapa...\" value={locationPin} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={3}>\n                            <img src={this.state.logoPath} alt=\"company logo\" width=\"180\" height=\"180\" style={{ borderRadius: '50%' }} />\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Logo</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"file\" name=\"file\" id=\"logoPath\" onChange={this.handleFileChange}/>\n                                <FormText color=\"muted\">\n                                    Insert your company logo here.\n                                </FormText>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <h5 >Is your company verified?</h5>\n                                <FormGroup check>\n                                    <Label check>\n                                    <Input type=\"checkbox\" value={verified} onChange={this.handleChange}/>{' '}\n                                    Verify Company\n                                    </Label>\n                                </FormGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"certificate\">Certificate Document</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"file\" name=\"file\" id=\"companyProof\" value={companyProof} onChange={this.handleFileChange}/>\n                                <FormText color=\"muted\">\n                                    Insert your company proof document here.\n                                </FormText>\n                            </FormGroup>\n                        </Col>\n\n                            \n                    </Row>\n\n                </Form>         \n\n            </>\n        )\n    }\n}\n\nexport default Company;","import React, { Component } from \"react\";\n\n// import the service file since we need it to send (and get) the data to(from) server\nimport axios from 'axios';\n\nclass AddImage extends Component {\n    state = {\n        name: \"\",\n        description: \"\",\n        file: \"\",\n        feedbackMessage: \"\"\n    };\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ file: event.target.files[0] });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const uploadData = new FormData();\n        uploadData.append(\"imageUrl\", this.state.file);\n        axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n\n                axios.post(`${process.env.REACT_APP_SERVER}/images/create`, {\n                    name: this.state.name,\n                    description: this.state.description,\n                    imageUrl: response.data.imageUrl\n                })\n                    .then((response) => {\n                        console.log('image created', response);\n                        this.setState({ name: '', description: '', file: '', feedbackMessage: 'Image uploaded sucessfully' });\n                    })\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>New Image</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.handleChange} />\n                    <label>Description</label>\n                    <textarea\n                        type=\"text\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChange} />\n                    <input type=\"file\" onChange={this.handleFileChange} />\n                    <button type=\"submit\">Save new image</button>\n                </form>\n                <div>{this.state.feedbackMessage}</div>\n            </div>\n        );\n    }\n}\n\nexport default AddImage;","import React from 'react';\nimport './Profile.css';\nimport axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loading from '../loading/Loading';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nclass Profile extends React.Component {\n\n    state = {\n        userInfo: [],\n        isBeingEdited: false,\n\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        email: '',\n        phone: '',\n        type: '',\n        company: '',\n        birthday: '',\n        photoPath: '',\n        tempPhotoPath:'',\n        loading: true\n    }\n\n    componentDidMount() {\n        console.log(\"component did mount\");\n\n        let userId = this.props.match.params.userId;\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true //to get user info from axios on call\n        });\n\n        return (\n\n            service.get(`/profile/${userId}`)\n                .then((response) => {\n                    let { firstName, lastName, username, password, email, phone, type, company, birthday, photoPath } = response.data;\n                    this.setState({\n                        userInfo: response.data,\n                        firstName: firstName,\n                        email: email,\n                        lastName: lastName,\n                        username: username,\n                        password: password,\n                        phone: phone,\n                        type: type,\n                        company: company,\n                        birthday: birthday,\n                        photoPath: photoPath,\n                        loading: false\n                    });\n                    console.log(response.data)\n                    console.log(\"PHOTO PATH COMING FROM SERVER\", photoPath);\n\n                })\n                .catch((err) => {\n                    return err;\n                })\n        );\n\n    }\n\n    handleChange = (event) => {\n        console.log(\"change handle\")\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ tempPhotoPath: event.target.files[0] });\n        console.log(this.state.tempPhotoPath);\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"EVENT TARGET FILES\", event.target.files)\n        let userId = this.props.match.params.userId;\n        let { firstName, lastName, username, password, email, company, phone, type, birthday, tempPhotoPath } = this.state;\n        console.log(\"PHOTO PATH COMING FROM STATE\", tempPhotoPath);\n        \n\n        if(this.state.tempPhotoPath===\"\"){\n            return axios.post(`${process.env.REACT_APP_SERVER}/profile/${userId}`, { firstName, lastName, username, password, email, company, phone, type, birthday, photoPath:this.state.photoPath })\n            .then(response => {\n                    console.log(\"success\", response);\n\n                    //notification success\n                    toast('Profile was updated!');\n                    //return no view mode\n                    this.setState({\n                        isBeingEdited:false\n                    });\n            });\n        }\n        else{\n        // upload profile pic\n        const uploadData = new FormData();\n        uploadData.append(\"photoPath\", this.state.tempPhotoPath);\n\n            // save in cloudinary\n            axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                //until here the photo is correct\n                this.setState({photoPath: response.data.photoPath });\n\n                return axios.post(`${process.env.REACT_APP_SERVER}/profile/${userId}`, { firstName, lastName, username, password, email, company, phone, type, birthday, photoPath:response.data.photoPath })\n                    .then(response => {\n                            console.log(\"success\", response);\n\n                            //notification success\n                            toast('Profile was updated!');\n                            //return no view mode\n                            this.setState({\n                                isBeingEdited:false\n                            });\n                    });\n            });\n        }\n\n        }  //end of form submit\n        \n\n    // Button to toggle edit mode\n    makeEdit() {\n        this.setState({\n            isBeingEdited: !this.state.isBeingEdited\n        });\n    }\n\n\n    render() {\n        console.log(\"render\")\n        /* getting props/state with all info from user destructured */\n        //const {userInfo} = this.state;\n        let { firstName, lastName, username, email, phone, type, company, birthday, photoPath, loading, isBeingEdited } = this.state;\n\n        return (\n            <>\n\n                {loading && <Loading />}\n\n                <header className=\"header\">\n                    <h1>Profile</h1>\n                    <div className=\"toTheRight\">\n                        <Button color=\"primary\" onClick={this.handleFormSubmit} >Save</Button>\n                        <Button\n                            onClick={() => this.makeEdit()}>\n                            {isBeingEdited ? \"View Mode\" : \"Edit\"}\n                        </Button>\n                    </div>\n                </header>\n\n                <ToastContainer\n                    position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n                <Form onSubmit={this.handleFormSubmit} className=\"profile\">\n                    <Row form>\n                        <Col md={3}>\n                            <img src={photoPath} alt=\"profile user\" width=\"300\" style={{ borderRadius: '50%' }} />\n                        </Col>\n                        <Col md={9}>\n                            <FormGroup>\n                                <Label for=\"username\">Username</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"username\" id=\"username\" placeholder=\"Escreve o teu username aqui...\" value={username} onChange={this.handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\">Email</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Escreve o teu email aqui...\" value={email} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <br /><p className=\"text-info\">Security information</p><hr />\n                    <Row form>\n                        <Col md={12}>\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Password</Label>\n                                <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\" disabled /* value={userInfo.password} */ onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>First Name</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Escreve o teu primeiro nome aqui...\" value={firstName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Last Name</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Escreve o teu último nome aqui...\" value={lastName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Phone</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Escreve o teu contacto aqui...\" value={phone} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Birthday</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"birthday\" id=\"birthday\" placeholder=\"Escolhe a tua data de aniversário...\" value={birthday} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <br /><p className=\"text-info\">Professional details</p><hr />\n                    <Row form>\n                        <Col md={12}>\n                            <FormGroup>\n                                <Label for=\"company\">Company</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"company\" id=\"company\" placeholder=\"Escreve o nome da tua empresa aqui\" value={company} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n\n                    <FormGroup>\n                        <Label for=\"typeofuser\">Role</Label>\n                        <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"select\" name=\"type\" id=\"typeofuser\" value={type} onChange={this.handleChange}>\n                            <option value=\"\" disabled >Select your option</option>\n                            <option id=\"worker\" >Providing services</option>\n                            <option id=\"client\" >Looking for services</option>\n                            <option id=\"combo\" >Both</option>\n                        </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"exampleFile\">Profile Photo</Label>\n                        <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"file\" name=\"file\" id=\"photoPath\" onChange={this.handleFileChange} />\n                        <FormText color=\"muted\">\n                            Insert your profile photo here.\n                        </FormText>\n                    </FormGroup>\n\n                </Form>\n\n            </>\n        )\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\r\nimport AuthService from './auth-service';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n//import moment from 'moment';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        errorMessage: '',\r\n        listOfServices: []\r\n\r\n    }\r\n    service = new AuthService();\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value, errorMessage: '' });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n\r\n        this.service.login(username, password)\r\n            .then(response => {\r\n                if (response.message) {\r\n                    this.setState({ errorMessage: \"Combinação de credenciais errada. Tente novamente.\" });\r\n                }\r\n                else {\r\n                    //Set the whole application with the user that just logged in\r\n                    this.props.setCurrentUser(response);\r\n                    this.setState({ username: '', password: '', email: '' });\r\n                    localStorage.setItem(\"loggedin\", true);\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n    }\r\n    getUserServices = () => {\r\n        let service = axios.create({\r\n            baseURL: `${process.env.REACT_APP_SERVER}`,\r\n            withCredentials: true\r\n        });\r\n        return (service.get(`/services`)\r\n            .then(responseFromAPI => {\r\n                // console.log(responseFromAPI)\r\n                // console.log(\"ISTO\", responseFromAPI.data)\r\n                // console.log(this.props)\r\n                this.setState({\r\n                    listOfServices: responseFromAPI.data\r\n                })\r\n            })\r\n        )\r\n    }\r\n    handleNotification = () => {\r\n        this.getUserServices()\r\n\r\n        // let today = moment().format(\"DD/MM/YYYY\")\r\n        // let eachBooking = []\r\n        this.state.listOfServices.map(response => {\r\n            if (response.bookings.length >= 1) {\r\n                response.bookings.map(response => {\r\n                    console.log(\"ESTE\", response)\r\n                    let eachBook = axios.create({\r\n                        baseURL: `${process.env.REACT_APP_SERVER}`,\r\n                        withCredentials: true\r\n                    });\r\n                    return eachBook.get(`/bookings/${response}`)\r\n                        .then(response => {\r\n                            console.log(\"IDSDAA\", response)\r\n                            let bookingInfo = response.data\r\n                            console.log(bookingInfo)\r\n                            console.log(bookingInfo.date)\r\n                            // eachBooking.push(bookingInfo)\r\n                            // let notificationDay = moment(bookingInfo.date).subtract(1, \"days\").format(\"DD/MM/YYYY\")\r\n                            // let dateNot = moment(bookingInfo.date).format(\"DD/MM/YYYY\")\r\n                            // console.log(\"hoje\", today)\r\n                            // console.log(\"dia notificação\", notificationDay)\r\n                            // if (today === notificationDay) {\r\n                            //     console.log(\"finally\")\r\n                            // } else {\r\n                            //     console.log(\"no notification\")\r\n                            // }\r\n\r\n                        })\r\n                })\r\n            } return;\r\n        })\r\n        // if (eachBooking.length >= 1) {\r\n        //     console.log(\"OUTRO\", eachBooking)\r\n\r\n        //     eachBooking.map(response => {\r\n        //         console.log(\"DATAS\", response.date)\r\n        //         let notificationDay = moment(response.date).subtract(1, \"days\").format(\"DD/MM/YYYY\")\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"username\">Username:</Label>\r\n                                <Input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Escreve o teu username aqui...\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"password\">Password:</Label>\r\n                                <Input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"&#9679; &#9679; &#9679; &#9679; &#9679;\" />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <button onClick={() => { this.handleNotification() }}>TESTE:</button> */}\r\n                    {this.state.errorMessage &&\r\n                        <p className=\"error\"> {this.state.errorMessage} </p>}\r\n\r\n                    <Button type=\"submit\">Sign in</Button>\r\n                    <FormGroup style={{ marginTop: \"10px\" }}>\r\n                        <p>Don't have account?\r\n                                <Link to={\"/signup\"}> | Signup</Link>\r\n                        </p>\r\n                    </FormGroup>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass Signup extends Component {\n    state = { username: '', password: '', firstName: '', lastName: '', email: '', type: '', errorMessage: '' };\n    service = new AuthService();\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('type', this.state.type);\n        const { username, password, firstName, lastName, email, type } = this.state;\n\n        this.service.signup(username, password, firstName, lastName, email, type)\n            .then(response => {\n                this.setState({\n                    username: '',\n                    password: '',\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    type: ''\n                });\n\n                this.props.setCurrentUser(response)\n                localStorage.setItem(\"loggedin\", true);\n\n                //redirecting to services on the browsers history\n                this.props.history.push(\"/\")\n            })\n            .catch((error) => {\n                console.log(error.message)\n                // this.setState({ errorMessage: error.response.data.message });\n            })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value, errorMessage: '' });\n    }\n\n    render() {\n        const { username, password, firstName, lastName, email, type } = this.state;\n\n        return (\n            <>\n                <header className=\"header\">\n                    <h1>Signup</h1>\n                </header>\n\n                <p className=\"text-info margin-content\">Your personal informations</p><hr />\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"email\">Email:</Label>\n                                <Input type=\"text\" name=\"email\" value={email} onChange={this.handleChange} placeholder=\"Escreve o teu email aqui...\" />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"password\">Password:</Label>\n                                <Input name=\"password\" type=\"password\" value={password} onChange={this.handleChange} placeholder=\"&#9679; &#9679; &#9679; &#9679; &#9679;\" />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"username\">First Name:</Label>\n                                <Input type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleChange} placeholder=\"Escreve o teu primeiro nome aqui...\" />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"password\">Last Name:</Label>\n                                <Input type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"username\">Username:</Label>\n                                <Input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} placeholder=\"Escreve o teu username aqui...\" />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"typeofuser\">Role</Label>\n                                <Input type=\"select\" name=\"type\" id=\"typeofuser\" value={type} onChange={this.handleChange} >\n                                    <option value=\"\" disabled >Select your user type...</option>\n                                    <option value=\"worker\" id=\"worker\" >Providing services</option>\n                                    <option value=\"client\" id=\"client\" >Looking for services</option>\n                                    {/* <option value=\"both\" id=\"combo\" >Both</option> */}\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    {/* Displaying an error message */}\n                    {this.state.errorMessage && <p className=\"error\"> {this.state.errorMessage} </p>}\n\n                    <Button>Sign up</Button>\n                    <FormGroup style={{ marginTop: \"10px\" }}>\n                        <p>Already have account?\n                        <Link to={\"/login\"}> Login</Link>\n                        </p>\n                    </FormGroup>\n                </Form>\n            </>\n        )\n    }\n}\nexport default Signup;","import React from 'react';\nimport './NotFound.css';\n\nfunction NotFound(){\n    return(\n        <section className=\"notfound\">\n\n             <h1>This page does not exist</h1>\n             <a href=\"/\">Get back home!</a>\n\n        </section>\n    )\n}\nexport default NotFound;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport \"./css/BookingListClient.css\"\r\nimport moment from 'moment';\r\nimport { CardHeader, CardBody, Button, Card } from 'reactstrap';\r\n\r\nclass BookingListClient extends Component {\r\n\r\n\tstate = {\r\n\t\tlistOfServices: [],\r\n\t\tbookings:[]\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getUserBookings()\r\n\r\n\t}\r\n\tgetUserServices = () => {\r\n\t\t// Get list of service from the API we just built\r\n\t\tlet service = axios.create({\r\n\t\t\tbaseURL: `${process.env.REACT_APP_SERVER}`,\r\n\t\t\twithCredentials: true\r\n\t\t});\r\n\t\treturn (service.get(`/services`)\r\n\t\t\t.then(responseFromAPI => {\r\n\t\t\t\tconsole.log(\"response\", responseFromAPI)\r\n\t\t\t\t// console.log(\"ISTO\", responseFromAPI.data)\r\n\t\t\t\t// console.log(this.props)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tlistOfServices: responseFromAPI.data\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\tgetUserBookings = () => {\r\n\t\tthis.getUserServices()\r\n\t\t.then(() => {\r\n\t\t\tconsole.log(\"list of servicessssss\",this.state.listOfServices)\r\n\t\t\t// let today = moment().format(\"DD/MM/YYYY\")\r\n\t\t\t// let eachBooking = []\r\n\r\n\t\t\tthis.state.listOfServices.map(response => {\r\n\t\t\t\tif (response.bookings.length >= 1) {\r\n\t\t\t\t\tconsole.log(\"responseeeeeeeee\",response.bookings)\r\n\t\t\t\t\tresponse.bookings.map(response => {\r\n\t\t\t\t\t\tconsole.log(\"ESTE\", response)\r\n\t\t\t\t\t\tlet eachBook = axios.create({\r\n\t\t\t\t\t\t\tbaseURL: `${process.env.REACT_APP_SERVER}`,\r\n\t\t\t\t\t\t\twithCredentials: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn eachBook.get(`/bookings/${response}`)\r\n\t\t\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\t\t\tconsole.log(\"OLHAAAA\",response.data.date)\r\n\t\t\t\t\t\t\t\tconsole.log(\"FESTAAAAAAA\", response)\r\n\t\t\t\t\t\t\t\tconsole.log(\"OLHAAA2\", moment.utc(response.data.date).utc().format('MM/DD/YYYY'))\r\n\t\t\t\t\t\t\t\tlet date = moment.utc(response.data.date).utc().format('MM/DD/YYYY');\r\n\t\t\t\t\t\t\t\tlet {confirmationStatus,\r\n\t\t\t\t\t\t\t\t\tlogStatus,\r\n\t\t\t\t\t\t\t\t\ttime,\r\n\t\t\t\t\t\t\t\t\ttitle} = response.data\r\n\r\n\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\tbookings:[ ...this.state.bookings,{confirmationStatus,date:date, logStatus, time, title}]\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t// this.setState({\r\n\t\t\t\t\t\t\t\t// \t\tbookings:[response.data]\r\n\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}); \r\n\t\t\t\t} \r\n\t\t\t});\r\n\t\t\t\r\n\t\t})\r\n\t\t\r\n\r\n\t}\r\n\trender() {\r\n\t\tlet {bookings} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<h1>My Bookings</h1>\r\n\t\t\t\t<section className=\"bookinglist\">\r\n\t\t\t\t\t{bookings.map((response) => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Card key={response._id}>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t<CardHeader><strong>{response.title}</strong></CardHeader>\r\n\t\t\t\t\t\t\t\t\t\t<CardBody><strong>Date:</strong>  {response.date}  |  <strong>Time:</strong>  {response.time}</CardBody>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<Button>+</Button>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\r\n\t\t\t\t</section>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BookingListClient;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Loading from './components/loading/Loading';\r\nimport Home from './components/home/Home';\r\nimport Footer from './components/footer/Footer';\r\nimport ServiceList from './components/services/ServiceList';\r\nimport ServiceDetails from './components/services/ServiceDetails';\r\nimport EditService from './components/services/EditService';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Company from './components/company/Company';\r\nimport AddImage from './components/images/AddImage';\r\nimport Profile from './components/profile/Profile';\r\nimport Login from './components/auth/Login';\r\nimport Signup from './components/auth/Signup';\r\nimport NotFound from './components/notfound/NotFound';\r\nimport AuthService from './components/auth/auth-service';\r\nimport BookingListClient from './components/bookings/BookingListClient';\r\n//import moment from 'moment';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Notifications } from \"react-push-notification\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n  service = new AuthService();\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    loading: true,\r\n    hasCompany: false\r\n  }\r\n\r\n  setCurrentUser = (userObj) => {\r\n    this.setState({\r\n      loggedInUser: userObj\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  fetchUser = (props) => {\r\n    if (this.state.loggedInUser === null) {\r\n      this.service.loggedin()\r\n        .then(response => {\r\n          console.log(\"response from fetch user\", response);\r\n          // console.log(\"COMPANY LENGTHHHH\", response.company.length)\r\n          // if(response.company.length!==0){\r\n          //   this.setState({ hasCompany: true });\r\n          // }\r\n\r\n          if (response._id) {\r\n            console.log(\"COM SUCESSO\");\r\n            localStorage.setItem(\"loggedin\", true)\r\n            this.setCurrentUser(response)\r\n\r\n          } else {\r\n\r\n            console.log(\"FAILURE\");\r\n            localStorage.clear();\r\n            this.props.history.push(\"/\");\r\n          }\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    //this.fetchUser(); console.log(this.state.loggedInUser)\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Notifications />\r\n        <Navbar loggedInUser={this.state.loggedInUser} setCurrentUser={this.setCurrentUser} />\r\n\r\n        <section className=\"maincontent\">\r\n\r\n          {this.state.loading && <Loading />}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" render={(props) => <Home isLoggedIn={this.state.loggedInUser} {...props} />} />\r\n            <Route path='/login' render={(props) => <Login setCurrentUser={this.setCurrentUser} {...props} />} />\r\n            <Route path='/signup' render={(props) => <Signup setCurrentUser={this.setCurrentUser} {...props} />} />\r\n            <Route exact path=\"/images/add\" component={AddImage} />\r\n            <Route exact path=\"/services\" render={(props) => <ServiceList loggedInUser={this.state.loggedInUser} {...props} />} />\r\n            <Route exact path=\"/services/:id\" render={(props) => <ServiceDetails {...props} loggedInUser={this.state.loggedInUser} />} />\r\n            <Route exact path=\"/services/:id/edit\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <EditService loggedInUser={this.state.loggedInUser} {...props} />\r\n              } else {\r\n                return <Redirect to=\"/login\" />\r\n              }\r\n            }}\r\n            />\r\n\r\n            <Route exact path=\"/profile/:userId\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <Profile {...props} />\r\n              } else {\r\n                return <Redirect to=\"/login\" />\r\n              }\r\n            }}\r\n            />\r\n            <Route exact path=\"/bookings\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <BookingListClient loggedInUser={this.state.loggedInUser} {...props} />\r\n              } else {\r\n                return <Redirect to=\"/login\" />\r\n              }\r\n            }}\r\n            />\r\n\r\n            {!this.state.hasCompany &&\r\n              <Route exact path=\"/company\" render={(props) => {\r\n                if (localStorage.getItem(\"loggedin\")) {\r\n                  return <Company loggedInUser={this.state.loggedInUser} {...props} />\r\n                }\r\n              }}\r\n              />\r\n            }\r\n\r\n\r\n            <Route exact path=\"/company/:id\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <Company loggedInUser={this.state.loggedInUser} {...props} />\r\n              }\r\n            }}\r\n            />\r\n\r\n\r\n            {/* Not found route */}\r\n            <Route path=\"*\" component={() => <NotFound />} />\r\n\r\n          </Switch>\r\n        </section>\r\n\r\n        <Footer />\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}