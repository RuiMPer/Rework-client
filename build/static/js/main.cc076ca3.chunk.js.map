{"version":3,"sources":["components/loading/Loading.js","components/home/Home.js","components/footer/Footer.js","components/services/AddService.js","components/notifications/AddNotification.js","components/services/ServiceList.js","components/bookings/AddBooking.js","components/bookings/EditBooking.js","components/services/ServiceDetails.js","components/services/EditService.js","components/auth/auth-service.js","components/navbar/Navbar.js","components/company/Company.js","components/images/AddImage.js","components/profile/Profile.js","components/auth/Login.js","components/auth/Signup.js","components/notfound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Loading","props","className","Spinner","type","color","Home","isLoggedIn","Jumbotron","Button","Card","inverse","CardImg","width","src","alt","CardImgOverlay","CardTitle","CardText","Footer","style","padding","textAlign","maxWidth","margin","AddService","state","category","title","description","photoPath","author","handleChange","event","target","name","value","setState","handleFileChange","files","handleFormSubmit","preventDefault","userId","uploadData","FormData","append","axios","post","process","then","response","console","log","data","refreshServices","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Form","onSubmit","this","Row","form","Col","md","FormGroup","Label","for","Input","id","onChange","FormText","Component","AddNotification","Page","onClick","addNotification","subtitle","message","theme","native","ServiceList","listOfServices","showAddService","getAllServices","get","responseFromAPI","loggedInUser","_id","map","service","key","to","CardBody","CardSubtitle","CardLink","href","float","AddBooking","date","time","serviceId","getService","EditBooking","booking","put","history","push","deleteBooking","params","match","delete","ServiceDetails","showEditBooking","showAddBooking","getSingleService","deleteService","closeOptions","handleDate","moment","format","handleNotification","today","bookingdate","notificationDay","_i","subtract","toString","toggle","bind","activeTab","tab","xs","pathname","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","photoName","bookings","client","EditService","location","AuthService","signup","username","password","firstName","lastName","email","loggedin","logout","login","catch","err","create","baseURL","withCredentials","Navbar","dropdownOpen","logoutUser","setCurrentUser","localStorage","clear","pills","exact","outline","Badge","Dropdown","nav","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","React","Company","isBeingEdited","logoPath","tempPhotoPath","logoName","locationPin","phone","admins","workers","verified","companyProof","makeEdit","disabled","placeholder","check","AddImage","file","feedbackMessage","handleSubmit","BACKEND_URL","imageUrl","Profile","userInfo","company","birthday","loading","undefined","borderRadius","Login","errorMessage","setItem","marginTop","Signup","error","NotFound","App","userObj","fetchUser","path","render","component","getItem","withRouter","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc076ca3.chunk.js","sourcesContent":["import React from 'react';\nimport { Spinner } from 'reactstrap';\nimport './Loading.css';\n\nconst Loading = (props) => {\n  return (\n    <div className=\"loading\">\n      <Spinner type=\"grow\" color=\"success\" /> Loading...\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\nimport './Home.css';\nimport { Jumbotron, Button, Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\n\nfunction Home(props){\n    return(\n        <section className=\"home\">\n\n            {/* <h1>Welcome to Re-work!</h1> */}\n\n\n            {props.isLoggedIn &&\n                <>\n                    <h3>Todos os Serviços da Empresa X</h3>\n                    <h3>Calendário da Empresa X</h3>\n                    <h3>Clientes da Empresa X</h3>\n                </>\n            }\n\n\n            <h3>About us</h3>\n            <Jumbotron>\n                <h1 className=\"display-8\">Um detaque sobre serviços ou categorias....</h1>\n                <p className=\"lead\">This is a simple hero unit, a simple Jumbotron-style component for calling extra attention to featured content or information.</p>\n                <hr className=\"my-2\" />\n                <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                <p className=\"lead\">\n                <Button color=\"primary\">Learn More</Button>\n                </p>\n            </Jumbotron>\n\n            <h3>All our categories</h3>\n            <Card inverse className=\"category-card\">\n                <CardImg width=\"100%\" src=\"https://picsum.photos/200\" alt=\"Card image cap\" />\n                <CardImgOverlay>\n                <CardTitle>TÍTULO GOES HERE</CardTitle>\n                <CardText>\n                    <small>Know more +</small>\n                </CardText>\n                </CardImgOverlay>\n            </Card>\n        </section>\n    )\n}\nexport default Home;","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer className=\"footer bg-info\" style={{ padding: '.5rem', textAlign: 'center' }}>\n            <div className=\"clearfix\" style={{ maxWidth: '980px', margin:'auto' }}>\n                <p className=\"float-right\">2020 | Re-WORK   /   Credits: R, M.</p>\n            </div>\n        </footer>\n    )\n}\nexport default Footer;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass AddService extends Component {\r\n    state = {\r\n        category: [],\r\n        title: '',\r\n        description: '',\r\n        photoPath: [],\r\n        author: \"\"\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n    handleFileChange = (event) => {\r\n        this.setState({ photoPath: event.target.files[0] });\r\n    }\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { category, title, description } = this.state\r\n        const userId = this.props.userId\r\n        const uploadData = new FormData()\r\n        uploadData.append(\"photoPath\", this.state.photoPath)\r\n\r\n        axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\r\n            .then((response) => {\r\n                console.log(\"USer\", userId)\r\n                console.log('image uploaded', response);\r\n                axios.post(`${process.env.REACT_APP_SERVER}/services`, { category, title, description, photoPath: response.data.photoPath, author: userId })\r\n                    .then((response) => {\r\n                        console.log('service created', response);\r\n                        this.props.refreshServices();\r\n                        this.setState({ category: [], title: '', description: \"\", photoPath: [], author: \"\" });\r\n                        toast('Service created!');\r\n                    })\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div><ToastContainer position=\"bottom-right\"\r\n            autoClose={5000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover/>\r\n                {/* <form onSubmit={this.handleFormSubmit}>\r\n                    <label>Title</label>\r\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                    <label>Category</label>\r\n                    <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\r\n                    <label>Description</label>\r\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    <input type=\"file\" name=\"file\" onChange={this.handleFileChange} />\r\n                    <input type=\"submit\" value=\"Submit\" />\r\n                </form> */}\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                                <Label for=\"category\">Category</Label>\r\n                                <Input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"file\">File</Label>\r\n                        <Input type=\"file\" name=\"file\" onChange={this.handleFileChange} />\r\n                        <FormText color=\"muted\">\r\n                            This is some placeholder block-level help text for the above input.\r\n                            It's a bit lighter and easily wraps to a new line.\r\n                        </FormText>\r\n                    </FormGroup>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddService;\r\n\r\n\r\n\r\n\r\n\r\n","import addNotification from 'react-push-notification';\r\nimport React, { Component } from \"react\";\r\n\r\nclass AddNotification extends Component {\r\n\tstate = {};\r\n\r\n\tPage = () => {\r\n\t\tconst buttonClick = () => {\r\n\t\t\taddNotification({\r\n\t\t\t\ttitle: 'Warning',\r\n\t\t\t\tsubtitle: 'This is a subtitle',\r\n\t\t\t\tmessage: 'This is a very long message',\r\n\t\t\t\ttheme: 'darkblue',\r\n\t\t\t\tnative: true // when using native, your OS will handle theming.\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"page\">\r\n\t\t\t\t<button onClick={buttonClick} className=\"button\">\r\n\t\t\t\t\tHello world.\r\n          </button>\r\n\t\t\t</div>)\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.Page()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddNotification;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { Link } from 'react-router-dom';\nimport AddService from './AddService';\nimport AddNotification from '../notifications/AddNotification';\nimport './css/ServiceList.css';\nimport { Card, CardImg, CardText, CardBody, CardLink,\n    CardTitle, CardSubtitle, Button } from 'reactstrap';\n\nclass ServiceList extends Component {\n\n    state = {\n        listOfServices: [],\n        showAddService: false\n    }\n\n    componentDidMount() {\n        this.getAllServices();\n    }\n\n    getAllServices = () => {\n        // Get list of service from the API we just built\n        axios.get(`${process.env.REACT_APP_SERVER}/services`)\n            .then(responseFromAPI => {\n\n                this.setState({\n                    listOfServices: responseFromAPI.data\n                })\n            });\n    }\n\n    showAddService = () => {\n        const { showAddService } = this.state;\n        showAddService ? this.setState({ showAddService: false }) : this.setState({ showAddService: true })\n    }\n\n    render() {\n        const { showAddService } = this.state\n        return (\n            <>\n\n                <header className=\"header\">\n                    <h1>My Services</h1> \n                    <Button onClick={() => this.showAddService()} className={showAddService ? 'openAdd' : null} >\n                        {showAddService ? \"Cancelar\" : \"Add Service\" }\n                    </Button>\n                </header>\n\n                {showAddService && <>\n                    <AddService userId={this.props.loggedInUser._id} refreshServices={this.getAllServices} />\n                </>}\n\n                <section className=\"maincontent servicelist\">\n                    {this.state.listOfServices.map(service => {\n                        return (\n                            <div key={service._id}>\n                                    <Card to={`/services/${service._id}`}>\n                                        <CardBody>\n                                            <CardTitle>{service.title}</CardTitle>\n                                            <CardSubtitle>CATEGORY</CardSubtitle>\n                                        </CardBody>\n                                            <img width=\"100%\" src={(service.photoPath!='unknown'||service.photoPath!='')?(service.photoPath):('https://picsum.photos/200')} alt=\"Card image cap\" />\n                                        <CardBody>\n                                            <CardLink href=\"#\">Book now</CardLink>\n                                            <CardLink href={`/services/${service._id}`}>Know more</CardLink>\n                                        </CardBody>\n                                    </Card>\n                            </div>\n                        );\n                    })}\n                    <a onClick={() => this.showAddService()} href=\"#\">Add Service</a>\n                    {this.state.showAddService && <div style={{ width: '50%', float: 'right' }}>\n                        <AddService userId={this.props.loggedInUser._id} refreshServices={this.getAllServices} />\n                    </div>}\n                    <AddNotification />\n                </section>\n            </>\n        )\n    }\n}\n\nexport default ServiceList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\nclass AddBooking extends Component {\n    state = {\n        title: '',\n        description: '',\n        date: \"\",\n        time: \"\"\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { title, description, date, time } = this.state;\n        const service = this.props.serviceId;\n        axios.post(`${process.env.REACT_APP_SERVER}/bookings`, { title, description, service, date, time })\n            .then(() => {\n                this.props.getService();\n                this.setState({ title: '', description: '', date: \"\", time: \"\" });\n                toast('Booking created!');\n            })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h3>Add Booking</h3>\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"date\">Date</Label>\n                                <Input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"time\">Time</Label>\n                        <Input type=\"time\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </Form>\n                <ToastContainer position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n            </div>\n        )\n    }\n}\n\nexport default AddBooking;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nclass EditBooking extends Component {\r\n\tstate = {\r\n\t\ttitle: this.props.booking.title,\r\n\t\tdescription: this.props.booking.description,\r\n\t\tdate: this.props.booking.date,\r\n\t\ttime: this.props.booking.time\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tconst { name, value } = event.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t}\r\n\r\n\thandleFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { title, description, date, time } = this.state;\r\n\r\n\t\taxios.put(`${process.env.REACT_APP_SERVER}/bookings/${this.props.booking._id}`, { title, description, date, time })\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.props.history.push('/services');\r\n\t\t\t});\r\n\t}\r\n\r\n\tdeleteBooking = () => {\r\n\t\tconst { params } = this.props.match;\r\n\t\taxios.delete(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\r\n\t\t\t.then(() => {\r\n\t\t\t\t//return <Redirect to='/services' />\r\n\t\t\t\tthis.props.history.push('/services');\r\n\t\t\t})\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Edit Form</h3>\r\n\t\t\t\t<Form onSubmit={this.handleFormSubmit}>\r\n\t\t\t\t\t<Row form>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"title\">Title</Label>\r\n\t\t\t\t\t\t\t\t<Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t\t<Label for=\"date\">Date</Label>\r\n\t\t\t\t\t\t\t\t<Input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"time\">Time</Label>\r\n\t\t\t\t\t\t<Input type=\"time\" name=\"time\" value={this.state.time} onChange={this.handleChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<Label for=\"description\">Description</Label>\r\n\t\t\t\t\t\t<Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t<Button>Submit</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default EditBooking;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport \"./css/ServiceDetails.css\";\nimport { Link } from 'react-router-dom';\nimport AddBooking from '../bookings/AddBooking';\nimport EditBooking from '../bookings/EditBooking';\n\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport Example from './Caroussel';\nimport moment from 'moment';\n\n\nclass ServiceDetails extends Component {\n    //1. Option one\n    /*state = {\n        title: '',\n        description: ''\n    }*/\n\n    //2. Option two\n    state = {\n        showEditBooking: false,\n        showAddBooking: false\n    }\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n    getSingleService = () => {\n        //id of the service is on the url /services/1234567\n        const { params } = this.props.match;\n        axios.get(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\n            .then(responseFromAPI => {\n                const service = responseFromAPI.data;\n                console.log('service found', service);\n                this.setState(service);\n            })\n    }\n\n    // 2. Happens second\n    componentDidMount() {\n        this.getSingleService();\n    }\n\n    deleteService = () => {\n        const { params } = this.props.match;\n        axios.delete(`${process.env.REACT_APP_SERVER}/services/${params.id}`)\n            .then(() => {\n                this.props.history.push('/services');\n            })\n    }\n\n    showAddBooking = () => {\n        this.state.showAddBooking ? this.setState({ showAddBooking: false }) : this.setState({ showAddBooking: true, showEditBooking: false })\n    }\n    showEditBooking = () => {\n        this.state.showEditBooking ? this.setState({ showEditBooking: false }) : this.setState({ showEditBooking: true, showAddBooking: false })\n    }\n    closeOptions = () => {\n        this.setState({ showEditBooking: false, showAddBooking: false })\n    }\n    deleteBooking = (booking) => {\n        const { params } = this.props.match;\n        console.log(booking)\n        axios.delete(`${process.env.REACT_APP_SERVER}/bookings/${booking._id}`)\n            .then(() => {\n                //return <Redirect to='/services' />\n                this.props.history.push(`/services`);\n            })\n    }\n\n    handleDate = (date) => {\n        const newDate = moment(date).format(\"DD/MM/YYYY\")\n        return newDate\n    }\n\n    handleNotification = (booking) => {\n\n        let today = moment().format(\"DD/MM/YYYY\")\n        let bookingdate = moment(booking.date)\n        let notificationDay = moment(booking.date._i).subtract(1, \"days\").format(\"DD/MM/YYYY\")\n        // let dayBefore = (moment.duration(notificationDay.diff(today)).asDays())\n        // console.log(today)\n\n        console.log(moment(booking.date).toString())\n        console.log(bookingdate)\n        console.log(today)\n        console.log(notificationDay)\n        // console.log(dayBefore)\n        if (today === notificationDay) {\n            return <div>Hello</div>\n        }\n\n    }\n    // 1. Happens first\n    render() {\n        const { params } = this.props.match;\n        return (\n            <>\n                <Row >\n                    <Col xs=\"1\"><a href=\"/services\">Back</a></Col>\n                    <Col xs=\"6\">{this.state.title}</Col>\n                    <Col xs=\"2\">\n                        <Link to={{\n                            pathname: `/services/${params.id}/edit`,\n                            state: {\n                                title: this.state.title,\n                                description: this.state.description,\n                                category: this.state.category,\n                                photoPath: this.state.photoPath\n                            }\n                        }}>Edit Service</Link>\n                    </Col>\n                    <Col ><a onClick={() => this.showAddBooking()} href=\"#\">Add Booking</a></Col>\n                </Row>\n                {this.props.loggedInUser &&\n                    <div>\n                        <Button onClick={() => this.deleteService()}>Delete Service</Button>\n                    </div>\n                }\n                <div>\n                    <Nav tabs >\n                        <div>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: this.state.activeTab === '1' })}\n                                    onClick={() => { this.toggle('1'); this.closeOptions() }}\n                                >\n                                    Information\n                            </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: this.state.activeTab === '2' })}\n                                    onClick={() => { this.toggle('2'); this.closeOptions() }}\n                                >\n                                    Bookings\n                            </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={classnames({ active: this.state.activeTab === '3' })}\n                                    onClick={() => { this.toggle('3'); this.closeOptions() }}\n                                >\n                                    Clients\n                            </NavLink>\n                            </NavItem>\n                        </div>\n                        <div>\n                            <p>Vista</p>\n                        </div>\n                    </Nav>\n                    <TabContent activeTab={this.state.activeTab}>\n                        <TabPane tabId=\"1\">\n                            {this.state.activeTab == 1 ?\n                                <div>\n                                    <Row>\n                                        <Col>Service Photo</Col>\n                                        <Col>Category</Col>\n                                        <Col>Description</Col>\n                                    </Row>\n                                    <Row>\n                                        <Col><img src={this.state.photoPath} alt={this.state.photoName} /></Col>\n                                        <Col><p>{this.state.category}</p></Col>\n                                        <Col><p>{this.state.description}</p></Col>\n                                    </Row>\n                                </div>\n                                : null}\n                        </TabPane>\n                        <TabPane tabId=\"2\">\n                            {this.state.activeTab == 2 ? <div>\n                                {this.state.bookings.map(booking => {\n                                    return (\n                                        <div key={booking._id}>\n                                            <ul>\n                                                <li>Title: {booking.title}</li>\n                                                <li>Description: {booking.description}</li>\n                                                <li>Date: {this.handleDate(booking.date)}</li>\n                                                <li>Time: {booking.time}</li>\n                                                <li>Client: {booking.client}</li>\n                                                <li><button onClick={() => { this.handleNotification(booking) }}>TESTE:</button></li>\n                                                <li><button onClick={this.showEditBooking}>Edit</button></li>\n                                                <li><button onClick={() => { this.deleteBooking(booking) }}>Delete</button></li>\n                                                {this.state.showEditBooking && <EditBooking booking={booking} {...this.props} />}\n                                            </ul>\n                                        </div>\n                                    )\n                                })}\n                            </div> : null}\n                        </TabPane>\n                        <TabPane tabId=\"3\">\n                            {this.state.activeTab == 3 ? <h4>Available in future Update</h4> : null}\n                        </TabPane>\n                    </TabContent>\n                </div>\n                {/* <div>\n                    <a onClick={() => this.showInfo()} href=\"#\">Information</a>\n                    <a onClick={() => this.showBooking()} href=\"#\">Bookings</a>\n                    <a onClick={() => this.showClient()} href=\"#\">Clients</a>\n                </div> */}\n\n                {/* {this.state.showInfo && <div>\n                    <img src={this.state.photoPath} />\n                    <h3>Category</h3>\n                    <p>{this.state.category}</p>\n                    <h3>Description</h3>\n                    <p>{this.state.description}</p>\n                </div>} */}\n                {/* <Example/> */}\n                {this.state.showAddBooking && <AddBooking getService={this.getSingleService} serviceId={this.props.match.params.id} />}\n                {/* <div>\n                    {this.state.showBooking && this.state.bookings.map(booking => {\n                        return (\n                            <div key={booking._id}>\n                                <ul>\n                                    <li>Title: {booking.title}</li>\n                                    <li>Description: {booking.description}</li>\n                                    <li>Date: {booking.date}</li>\n                                    <li>Time: {booking.time}</li>\n                                    <li>Client: {booking.client}</li>\n                                    <li><button onClick={this.showEditBooking}>Edit</button></li>\n                                    {this.state.showForm && <EditBooking booking={booking} {...this.props} />}\n                                    {this.state.showEditBooking && <EditBooking booking={booking} {...this.props} />}\n                                </ul>\n                            </div>\n                        )\n                    })}\n                </div> */}\n            </>\n        )\n    }\n}\n\nexport default ServiceDetails;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass EditService extends Component {\n    state = {\n        title: this.props.location.state.title,\n        category: this.props.location.state.category,\n        description: this.props.location.state.description,\n        photoPath: this.props.location.state.photoPath\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        const { title, category, description } = this.state;\n        const { params } = this.props.match;\n        const uploadData = new FormData()\n        uploadData.append(\"photoPath\", this.state.photoPath)\n\n        axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                axios.put(`${process.env.REACT_APP_SERVER}/services/${params.id}`, { title, category, description, photoPath: response.data.photoPath })\n                    .then((response) => {\n                        toast('Service Updated!')\n                        this.props.history.push('/services')\n                    })\n            })\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ photoPath: event.target.files[0] });\n    }\n    render() {\n        const { params } = this.props.match;\n        return (\n            <div>\n                <Link to={{ pathname: `/services/${params.id}` }}>Back</Link>\n                <h3>Edit Service</h3>\n                {/* <form onSubmit={this.handleFormSubmit}>\n                    <label>Title</label>\n                    <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleChange} />\n                    <label>Category</label>\n                    <input type=\"text\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\n                    <label>Description</label>\n                    <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"submit\" />\n                </form> */}\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"title\">Title</Label>\n                                <Input type=\"text\" name=\"title\" id=\"title\" value={this.state.title} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"category\">Category</Label>\n                                <Input type=\"category\" name=\"category\" value={this.state.category} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"description\">Description</Label>\n                        <Input type=\"textarea\" name=\"description\" value={this.state.description} onChange={this.handleChange} />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"file\">File</Label>\n                        <Input type=\"file\" name=\"file\" onChange={this.handleFileChange} />\n                        <FormText color=\"muted\">\n                            This is some placeholder block-level help text for the above input.\n                            It's a bit lighter and easily wraps to a new line.\n                        </FormText>\n                    </FormGroup>\n                    <Button>Submit</Button>\n                </Form>\n                <ToastContainer position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover/>\n            </div>\n        )\n    }\n\n}\n\nexport default EditService;","import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n\nclass AuthService {\n    constructor() {\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n        this.service = service;\n    }\n\n    signup = (username, password, firstName, lastName, email, type) => {\n        return this.service.post('/signup', { username, password, firstName, lastName, email, type })\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    loggedin = () => {\n        return this.service.get('/loggedin')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    logout = () => {\n        return this.service.post('/logout')\n            .then((response) => {\n                return response.data;\n            });\n    }\n\n    login = (username, password) => {\n        return this.service.post('/login', { username, password })\n            .then((response) => {\n                return response.data\n            })\n            .catch((err) => {\n                return err;\n            })\n    }\n}\n\nexport default AuthService;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navbar.css';\nimport AuthService from '../auth/auth-service';\nimport { Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport { Badge, Button } from 'reactstrap';\n\n\nclass Navbar extends React.Component {\n    service = new AuthService();\n\n    state = {\n        dropdownOpen: false\n    };\n\n\n    toggle() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    logoutUser = () => {\n        this.service.logout()\n            .then(() => {\n                this.props.setCurrentUser(null);\n                localStorage.clear();\n            })\n    }\n\n    render() {\n        //console.log(this.props.loggedInUser)\n\n        return (\n            <nav className=\"navbar\">\n                <Nav pills>\n\n                    <NavItem>\n                        <NavLink exact to=\"/\">Home</NavLink>\n                    </NavItem>\n\n                    {!this.props.loggedInUser ? (\n                        <>\n                        <NavItem>\n                            <NavLink to=\"/search\">Search</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to='/login'>Login</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to='/signup'>Signup</NavLink>\n                        </NavItem>\n                        </>\n                    ) : (\n                        <>\n                        <div className=\"alignright\">\n\n                            <span className=\"nav-item\">\n                                Welcome, {this.props.loggedInUser.firstName}!\n                            </span>\n                            <div className=\"nav-item\">\n                                <Button color=\"primary\" outline>\n                                    Bookings <Badge color=\"secondary\">4</Badge>\n                                </Button>\n                            </div>\n                            <Dropdown nav isOpen={this.state.dropdownOpen} toggle={() => this.toggle()}>\n                                <DropdownToggle nav caret>\n                                    My Area\n                                </DropdownToggle>\n                                <DropdownMenu>\n\n                                    {this.props.loggedInUser.type === \"worker\" ? ( \n                                    <>\n                                    <DropdownItem header>Worker</DropdownItem> \n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/services\">My Services</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/clients\">My Clients</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/company\">My Company</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                    </>\n                                    ):(\n                                    <DropdownItem header>Client</DropdownItem>\n                                    )}\n                                    \n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/bookings\">My Bookings</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n\n                                    <DropdownItem divider />\n\n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/settings\">Settings</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to={`/profile/${this.props.loggedInUser._id}`}>Profile</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                    <DropdownItem>\n                                        <NavItem>\n                                            <NavLink to=\"/\" onClick={() => this.logoutUser()}>Logout</NavLink>\n                                        </NavItem>\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n\n                        </div>\n\n                    </>)}\n                </Nav>\n            </nav>\n        )\n    }\n}\n\nexport default Navbar;","\n// title: String,\n// workers: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n// logoPath: String, //cloudinary\n// logoName: String, // cloudinary\n// locationPin: String, //google maps\n// phone: String, \n// service: [{ type: Schema.Types.ObjectId, ref: 'Service' }], \n// admins: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n// verified: Boolean\n\nimport React from 'react';\nimport './Company.css';\nimport axios from 'axios';\nimport {toast}  from 'react-toastify';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nclass Company extends React.Component {\n\n    state = {\n        isBeingEdited:false,\n\n        title: '',\n        logoPath: '',\n        tempPhotoPath:'',\n        logoName: `${this.state}'s logo`,\n        locationPin: '',\n        phone: '',\n        admins:[],\n        workers:[],\n        verified:'',\n        companyProof:''\n    }\n\n    componentDidMount(){\n        console.log(\"component did mount\");\n\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n            });\n\n        return (\n            service.get(`/company`)\n                .then((response) => {\n                    let { title, logoPath, logoName, locationPin, phone, admins, workers, verified, companyProof } = response.data;\n                    this.setState({\n                        title,\n                        logoPath,\n                        logoName,\n                        locationPin,\n                        phone,\n                        admins,\n                        workers,\n                        verified, \n                        companyProof\n                    });\n                })\n            .catch((err) => {\n                return err;\n            })\n        );\n\n    }\n\n    handleChange = (event) => {\n        console.log(\"change handle\");\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ tempPhotoPath: event.target.files[0] });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        \n        //save edit to bd\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true\n        });\n\n        let { title, logoPath, logoName, locationPin, phone, admins, verified, companyProof } = this.state;\n        service.post(`/company`, { title, logoPath, logoName, locationPin, phone, admins, verified, companyProof}, { withCredentials: true } )\n            .then((response) => {\n                console.log(\"success\", response)\n                toast('Company created!');\n            })\n    }\n\n    // Button to toggle edit mode\n    makeEdit(){\n        this.setState({\n            isBeingEdited: !this.state.isBeingEdited\n        });\n    }\n\n\n    render() {\n        console.log(\"render\")\n        /* getting props/state with all info from user destructured */\n        //const {userInfo} = this.state;\n        let { title, logoPath, locationPin, phone, admins, verified, companyProof } = this.state;\n\n        return (\n            <>\n                <header className=\"header\">\n                    <h1>My Company</h1> \n                    <div className=\"toTheRight\">\n                        <Button color=\"primary\" onClick={this.handleFormSubmit} >Save</Button>\n                        <Button\n                            onClick={() => this.makeEdit()}>\n                            {this.state.isBeingEdited ? \"View Mode\" : \"Edit\"}\n                        </Button>\n                    </div>\n                </header>\n                \n\n                <Form onSubmit={this.handleFormSubmit}>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"companyName\">Name</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"title\" id=\"title\" placeholder=\"Escreve o nome da tua empresa aqui...\" value={title} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"username\">Phone</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Escreve o telefone aqui...\" value={phone} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Admin of this Company</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"select\" name=\"type\" id=\"admins\" value={admins} onChange={this.handleChange}>\n                                    <option value=\"\" disabled >Responsável pela tua empresa</option>\n                                    <option value={this.props.loggedInUser}>Eu próprio</option>\n                                    <option>Outro</option>\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Location Pin</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"text\" name=\"locationPin\" id=\"locationPin\" placeholder=\"Localiza a tua empresa no mapa...\" value={locationPin} onChange={this.handleChange}/>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label for=\"logo\">Logo</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"file\" name=\"file\" id=\"logoPath\" value={logoPath}/>\n                                <FormText color=\"muted\">\n                                    Insert your company logo here.\n                                </FormText>\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <hr/>\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <h5 for=\"verified\">Is your company verified?</h5>\n                                <FormGroup check>\n                                    <Label check>\n                                    <Input type=\"checkbox\" value={verified}/>{' '}\n                                    Verify Company\n                                    </Label>\n                                </FormGroup>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"certificate\">Certificate Document</Label>\n                                <Input disabled={(!this.state.isBeingEdited) ? \"disabled\" : \"\" } type=\"file\" name=\"file\" id=\"companyProof\" value={companyProof}/>\n                                <FormText color=\"muted\">\n                                    Insert your company proof document here.\n                                </FormText>\n                            </FormGroup>\n                        </Col>\n\n                            \n                    </Row>\n\n                </Form>         \n\n            </>\n        )\n    }\n}\n\nexport default Company;","import React, { Component } from \"react\";\n \n// import the service file since we need it to send (and get) the data to(from) server\nimport axios from 'axios';\n \nclass AddImage extends Component {\n    state = {\n        name: \"\",\n        description: \"\",\n        file: \"\",\n        feedbackMessage: \"\"\n    };\n    \n    handleChange = (event) => {  \n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n    \n    handleFileChange = (event) => {\n        this.setState({ file: event.target.files[0]});\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const uploadData = new FormData();\n        uploadData.append(\"imageUrl\", this.state.file);\n        axios.post(`${process.env.BACKEND_URL}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                \n                axios.post(`${process.env.BACKEND_URL}/images/create`, {\n                    name: this.state.name,\n                    description: this.state.description,\n                    imageUrl: response.data.imageUrl\n                })\n                .then((response) => {\n                    console.log('image created', response);\n                    this.setState({ name: '', description: '', file: '', feedbackMessage: 'Image uploaded sucessfully'});\n                })\n            })\n    }  \n    \n    render() {\n        return (\n          <div>\n            <h2>New Image</h2>\n            <form onSubmit={this.handleSubmit}>\n                <label>Name</label>\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    value={ this.state.name } \n                    onChange={this.handleChange} />\n                <label>Description</label>\n                <textarea \n                    type=\"text\" \n                    name=\"description\" \n                    value={ this.state.description } \n                    onChange={this.handleChange} />\n                <input type=\"file\" onChange={this.handleFileChange} /> \n                <button type=\"submit\">Save new image</button>\n            </form>\n            <div>{this.state.feedbackMessage}</div>\n          </div>\n        );\n    }\n}\n \nexport default AddImage;","import React from 'react';\nimport './Profile.css';\nimport axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loading from '../loading/Loading';\n\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nclass Profile extends React.Component {\n\n    state = {\n        userInfo: [],\n        isBeingEdited: false,\n\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        email: '',\n        phone: '',\n        type: '',\n        company: '',\n        birthday: '',\n        photoPath: '',\n\n        loading: true\n    }\n\n    componentDidMount() {\n        console.log(\"component did mount\");\n\n        let userId = this.props.match.params.userId;\n        let service = axios.create({\n            baseURL: `${process.env.REACT_APP_SERVER}`,\n            withCredentials: true //to get user info from axios on call\n        });\n\n        return (\n\n            service.get(`/profile/${userId}`)\n                .then((response) => {\n                    let { firstName, lastName, username, password, email, phone, type, company, birthday, photoPath } = response.data;\n                    this.setState({\n                        userInfo: response.data,\n                        firstName: firstName,\n                        email: email,\n                        lastName: lastName,\n                        username: username,\n                        password: password,\n                        phone: phone,\n                        type: type,\n                        company: company,\n                        birthday: birthday,\n                        photoPath: photoPath,\n                        tempPhotoPath: '',\n\n                        loading: false\n                    });\n                    console.log(response.data)\n                    console.log(\"PHOTO PATH COMING FROM SERVER\", photoPath);\n\n                })\n                .catch((err) => {\n                    return err;\n                })\n        );\n\n    }\n\n    handleChange = (event) => {\n        console.log(\"change handle\")\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    handleFileChange = (event) => {\n        this.setState({ tempPhotoPath: event.target.files[0] });\n    }\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"EVENT TARGET FILES\", event.target.files)\n        let userId = this.props.match.params.userId;\n        let { firstName, lastName, username, password, email, company, phone, type, birthday, tempPhotoPath, photoPath } = this.state;\n        console.log(\"PHOTO PATH COMING FROM STATE\", tempPhotoPath);\n        \n\n        if(event.target.files===undefined){\n            return axios.post(`${process.env.REACT_APP_SERVER}/profile/${userId}`, { firstName, lastName, username, password, email, company, phone, type, birthday, photoPath:this.state.photoPath })\n            .then(response => {\n                    console.log(\"success\", response);\n\n                    //notification success\n                    toast('Profile was updated!');\n                    //return no view mode\n                    this.setState({\n                        isBeingEdited:false\n                    });\n            });\n        }\n        else{\n        // upload profile pic\n        const uploadData = new FormData();\n        uploadData.append(\"photoPath\", this.state.tempPhotoPath);\n\n            // save in cloudinary\n            axios.post(`${process.env.REACT_APP_SERVER}/upload`, uploadData)\n            .then((response) => {\n                console.log('image uploaded', response);\n                //until here the photo is correct\n                this.setState({photoPath: response.data.photoPath });\n\n                return axios.post(`${process.env.REACT_APP_SERVER}/profile/${userId}`, { firstName, lastName, username, password, email, company, phone, type, birthday, photoPath:response.data.photoPath })\n                    .then(response => {\n                            console.log(\"success\", response);\n\n                            //notification success\n                            toast('Profile was updated!');\n                            //return no view mode\n                            this.setState({\n                                isBeingEdited:false\n                            });\n                    });\n            });\n        }\n\n        }  //end of form submit\n        \n\n    // Button to toggle edit mode\n    makeEdit() {\n        this.setState({\n            isBeingEdited: !this.state.isBeingEdited\n        });\n    }\n\n\n    render() {\n        console.log(\"render\")\n        /* getting props/state with all info from user destructured */\n        //const {userInfo} = this.state;\n        let { firstName, lastName, username, email, phone, type, company, birthday, photoPath, loading, isBeingEdited } = this.state;\n\n        return (\n            <>\n\n                {loading && <Loading />}\n\n                <header className=\"header\">\n                    <h1>Profile</h1>\n                    <div className=\"toTheRight\">\n                        <Button color=\"primary\" onClick={this.handleFormSubmit} >Save</Button>\n                        <Button\n                            onClick={() => this.makeEdit()}>\n                            {isBeingEdited ? \"View Mode\" : \"Edit\"}\n                        </Button>\n                    </div>\n                </header>\n\n                <ToastContainer\n                    position=\"bottom-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n                <Form onSubmit={this.handleFormSubmit} className=\"profile\">\n                    <Row form>\n                        <Col md={3}>\n                            <img src={photoPath} alt=\"profile user\" width=\"300\" style={{ borderRadius: '50%' }} />\n                        </Col>\n                        <Col md={9}>\n                            <FormGroup>\n                                <Label for=\"username\">Username</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"username\" id=\"username\" placeholder=\"Escreve o teu username aqui...\" value={username} onChange={this.handleChange} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\">Email</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Escreve o teu email aqui...\" value={email} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <br /><p className=\"text-info\">Security information</p><hr />\n                    <Row form>\n                        <Col md={12}>\n                            <FormGroup>\n                                <Label for=\"examplePassword\">Password</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"&#9679;&#9679;&#9679;&#9679;&#9679;\" disabled /* value={userInfo.password} */ onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>First Name</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"Escreve o teu primeiro nome aqui...\" value={firstName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Last Name</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"Escreve o teu último nome aqui...\" value={lastName} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <Row form>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Phone</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Escreve o teu contacto aqui...\" value={phone} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                        <Col md={6}>\n                            <FormGroup>\n                                <Label>Birthday</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"birthday\" id=\"birthday\" placeholder=\"Escolhe a tua data de aniversário...\" value={birthday} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n                    <br /><p className=\"text-info\">Professional details</p><hr />\n                    <Row form>\n                        <Col md={12}>\n                            <FormGroup>\n                                <Label for=\"company\">Company</Label>\n                                <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"text\" name=\"company\" id=\"company\" placeholder=\"Escreve o nome da tua empresa aqui\" value={company} onChange={this.handleChange} />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n\n\n                    <FormGroup>\n                        <Label for=\"typeofuser\">Role</Label>\n                        <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"select\" name=\"type\" id=\"typeofuser\" value={type} onChange={this.handleChange}>\n                            <option value=\"\" disabled >Select your option</option>\n                            <option id=\"worker\" >Providing services</option>\n                            <option id=\"client\" >Looking for services</option>\n                            <option id=\"combo\" >Both</option>\n                        </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"exampleFile\">Profile Photo</Label>\n                        <Input disabled={(!isBeingEdited) ? \"disabled\" : \"\"} type=\"file\" name=\"file\" id=\"photoPath\" onChange={this.handleFileChange} />\n                        <FormText color=\"muted\">\n                            Insert your profile photo here.\n                        </FormText>\n                    </FormGroup>\n\n                </Form>\n\n            </>\n        )\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\r\nimport AuthService from './auth-service';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        errorMessage: ''\r\n    }\r\n    service = new AuthService();\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value, errorMessage:'' });\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { username, password } = this.state;\r\n\r\n        this.service.login(username, password)\r\n            .then(response => { \r\n                if (response.message ) { \r\n                    this.setState({errorMessage: \"Combinação de credenciais errada. Tente novamente.\"});\r\n                } \r\n                else {\r\n                    //Set the whole application with the user that just logged in\r\n                    this.props.setCurrentUser(response);\r\n                    this.setState({ username: '', password: '', email: '' });\r\n                    localStorage.setItem(\"loggedin\", true);\r\n                    this.props.history.push('/');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form onSubmit={this.handleFormSubmit}>\r\n                    <Row form>\r\n                        <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"username\">Username:</Label>\r\n                            <Input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} placeholder=\"Escreve o teu username aqui...\" />\r\n                        </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                        <FormGroup>\r\n                            <Label for=\"password\">Password:</Label>\r\n                            <Input name=\"password\" type=\"password\" value={this.state.password} onChange={this.handleChange} placeholder=\"&#9679; &#9679; &#9679; &#9679; &#9679;\"/>\r\n                        </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    { this.state.errorMessage &&\r\n                    <p className=\"error\"> { this.state.errorMessage } </p> }\r\n\r\n                    <Button type=\"submit\">Sign in</Button>\r\n                    <FormGroup style={{marginTop: \"10px\"}}>\r\n                            <p>Don't have account?\r\n                                <Link to={\"/signup\"}> | Signup</Link>\r\n                            </p>\r\n                    </FormGroup>\r\n                </Form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\nimport AuthService from './auth-service';\nimport { Link } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nclass Signup extends Component {\n    state = { username: '', password: '', firstName: '', lastName: '', email:'', type:'', errorMessage: '' };\n    service = new AuthService();\n\n    handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('type', this.state.type);\n        const {username, password, firstName, lastName, email, type} = this.state;\n\n        this.service.signup(username, password, firstName, lastName, email, type)\n            .then(response => {\n                this.setState({\n                    username: '', \n                    password: '',\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    type:''\n                });\n\n                this.props.setCurrentUser(response)\n                localStorage.setItem(\"loggedin\", true);\n\n                //redirecting to services on the browsers history\n                this.props.history.push(\"/\")\n            })\n            .catch((error) => {\n                this.setState({errorMessage: error.response.data.message});\n            })\n    }\n\n    handleChange = (event) => {  \n        const {name, value} = event.target;\n        this.setState({[name]: value, errorMessage:''});\n    }\n\n    render(){\n        const {username, password, firstName, lastName, email, type} = this.state;\n\n        return( \n            <>\n            <header className=\"header\">\n                <h1>Signup</h1> \n            </header>\n\n            <p className=\"text-info margin-content\">Your personal informations</p><hr/>\n            <Form onSubmit={this.handleFormSubmit}>\n                <Row form>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"email\">Email:</Label>\n                            <Input type=\"text\" name=\"email\" value={email} onChange={this.handleChange} placeholder=\"Escreve o teu email aqui...\" />\n                        </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"password\">Password:</Label>\n                            <Input name=\"password\" type=\"password\" value={password} onChange={this.handleChange} placeholder=\"&#9679; &#9679; &#9679; &#9679; &#9679;\"/>\n                        </FormGroup>\n                    </Col>\n                </Row>\n\n                <Row form>\n                    <Col md={6}>\n                    <FormGroup>\n                        <Label for=\"username\">First Name:</Label>\n                        <Input type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleChange} placeholder=\"Escreve o teu primeiro nome aqui...\" />\n                    </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                    <FormGroup>\n                        <Label for=\"password\">Last Name:</Label>\n                        <Input type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange}/>\n                    </FormGroup>\n                    </Col>\n                </Row>\n\n                <Row form>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"username\">Username:</Label>\n                            <Input type=\"text\" name=\"username\" value={username} onChange={this.handleChange} placeholder=\"Escreve o teu username aqui...\" />\n                        </FormGroup>\n                    </Col>\n                    <Col md={6}>\n                        <FormGroup>\n                            <Label for=\"typeofuser\">Role</Label>\n                            <Input type=\"select\" name=\"type\" id=\"typeofuser\" value={type} onChange={this.handleChange} >\n                                <option value=\"\" disabled >Select your user type...</option>\n                                <option value=\"worker\" id=\"worker\" >Providing services</option>\n                                <option value=\"client\" id=\"client\" >Looking for services</option>\n                                <option value=\"both\" id=\"combo\" >Both</option>\n                            </Input>\n                        </FormGroup>\n                    </Col>\n                </Row>\n                \n                {/* Displaying an error message */}\n                { this.state.errorMessage && <p className=\"error\"> { this.state.errorMessage } </p> }\n\n                <Button>Sign up</Button>\n                <FormGroup style={{marginTop: \"10px\"}}>\n                    <p>Already have account? \n                        <Link to={\"/login\"}> Login</Link>\n                    </p>\n                </FormGroup>\n            </Form>\n            </>\n        )\n    }\n}\nexport default Signup;","import React from 'react';\nimport './NotFound.css';\n\nfunction NotFound(){\n    return(\n        <section className=\"notfound\">\n\n             <h1>This page does not exist</h1>\n             <a href=\"/\">Get back home!</a>\n\n        </section>\n    )\n}\nexport default NotFound;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { withRouter} from 'react-router-dom';\r\nimport Loading from './components/loading/Loading';\r\nimport Home from './components/home/Home';\r\nimport Footer from './components/footer/Footer';\r\nimport ServiceList from './components/services/ServiceList';\r\nimport ServiceDetails from './components/services/ServiceDetails';\r\nimport EditService from './components/services/EditService';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Company from './components/company/Company';\r\nimport AddImage from './components/images/AddImage';\r\nimport Profile from './components/profile/Profile';\r\nimport Login from './components/auth/Login';\r\nimport Signup from './components/auth/Signup';\r\nimport NotFound from './components/notfound/NotFound';\r\nimport AuthService from './components/auth/auth-service';\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Notifications } from \"react-push-notification\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n  service = new AuthService();\r\n\r\n  state = {\r\n    loggedInUser: null,\r\n    loading:true\r\n  }\r\n\r\n  setCurrentUser = (userObj) => {\r\n    this.setState({\r\n      loggedInUser: userObj\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUser();\r\n    {this.setState({loading: false})}\r\n  }\r\n\r\n  fetchUser = (props) => {\r\n    if(this.state.loggedInUser === null) {\r\n      this.service.loggedin() \r\n      .then(response => {\r\n      console.log(\"response from fetch user\", response);\r\n\r\n        if (response._id) {\r\n          console.log(\"COM SUCESSO\");\r\n          localStorage.setItem(\"loggedin\", true)\r\n          this.setCurrentUser(response)\r\n\r\n        } else {\r\n          \r\n          console.log(\"FAILURE\");\r\n          localStorage.clear();\r\n          this.props.history.push(\"/\");\r\n        }\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    //this.fetchUser(); console.log(this.state.loggedInUser)\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Notifications />\r\n        <Navbar loggedInUser={this.state.loggedInUser} setCurrentUser={this.setCurrentUser} />\r\n\r\n        <section className=\"maincontent\">\r\n\r\n        {this.state.loading && <Loading/>}\r\n        \r\n          <Switch>\r\n            <Route exact path=\"/\" render={(props) => <Home isLoggedIn={this.state.loggedInUser} {...props} />} />\r\n            <Route path='/login' render={(props) => <Login setCurrentUser={this.setCurrentUser} {...props} />} />\r\n            <Route path='/signup' render={(props) => <Signup setCurrentUser={this.setCurrentUser} {...props} />} />\r\n            <Route exact path=\"/images/add\" component={AddImage} />\r\n            <Route exact path=\"/services\" render={(props) => <ServiceList loggedInUser={this.state.loggedInUser} {...props} />} />\r\n            <Route exact path=\"/services/:id\" render={(props) => <ServiceDetails {...props} loggedInUser={this.state.loggedInUser} />} />\r\n            <Route exact path=\"/services/:id/edit\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <EditService loggedInUser={this.state.loggedInUser} {...props} />\r\n              } else {\r\n                return <Redirect to=\"/login\" />\r\n              }\r\n            }}\r\n            />\r\n\r\n            <Route exact path=\"/profile/:userId\" render={(props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <Profile {...props} />\r\n              } else {\r\n                return <Redirect to=\"/login\" />\r\n              }\r\n            }}\r\n            />\r\n\r\n            <Route exact path=\"/company\" render={ (props) => {\r\n              if (localStorage.getItem(\"loggedin\")) {\r\n                return <Company loggedInUser={this.state.loggedInUser} {...props} />\r\n              }}}\r\n            />\r\n\r\n            {/* Not found route */}\r\n            <Route path=\"*\" component={() => <NotFound/>}/>\r\n\r\n          </Switch>\r\n        </section>\r\n\r\n        <Footer/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n        <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}